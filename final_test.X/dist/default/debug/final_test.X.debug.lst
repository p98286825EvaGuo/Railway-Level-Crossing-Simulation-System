

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 28 19:59:55 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 18/08/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataCOMRAM
    68   000E46                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for main@F3085
    72   000E46  F7                 	db	247
    73   000E47  24                 	db	36
    74   000E48  DD                 	db	221
    75   000E49  ED                 	db	237
    76   000E4A  2E                 	db	46
    77   000E4B  6B                 	db	107
    78   000E4C  FB                 	db	251
    79   000E4D  25                 	db	37
    80   000E4E  FF                 	db	255
    81   000E4F  6F                 	db	111
    82   000000                     _RCREG	set	4014
    83   000000                     _TXREG	set	4013
    84   000000                     _PIE1bits	set	3997
    85   000000                     _PIR1bits	set	3998
    86   000000                     _RCSTAbits	set	4011
    87   000000                     _SPBRG	set	4015
    88   000000                     _BAUDCONbits	set	4024
    89   000000                     _TXSTAbits	set	4012
    90   000000                     _TRISCbits	set	3988
    91   000000                     _ADCON0bits	set	4034
    92   000000                     _ADRESL	set	4035
    93   000000                     _ADRESH	set	4036
    94   000000                     _CCP1CONbits	set	4029
    95   000000                     _CCPR1L	set	4030
    96   000000                     _TRISB	set	3987
    97   000000                     _PORTBbits	set	3969
    98   000000                     _ADCON2bits	set	4032
    99   000000                     _CREN	set	32092
   100   000000                     _RCIF	set	31989
   101   000000                     _IRCF0	set	32412
   102   000000                     _IRCF1	set	32413
   103   000000                     _PORTB	set	3969
   104   000000                     _LATA	set	3977
   105   000000                     _LATD	set	3980
   106   000000                     _TRISD	set	3989
   107   000000                     _INTCONbits	set	4082
   108   000000                     _TRISE	set	3990
   109   000000                     _LATE	set	3981
   110   000000                     _TRISA	set	3986
   111   000000                     _LATC	set	3979
   112   000000                     _ADCON1	set	4033
   113   000000                     _ADFM	set	32263
   114   000000                     _T2CONbits	set	4042
   115   000000                     _RCONbits	set	4048
   116   000000                     _PR2	set	4043
   117   000000                     _IRCF2	set	32414
   118   000000                     _IPR1bits	set	3999
   119                           
   120                           	psect	smallconst
   121   000600                     __psmallconst:
   122                           	callstack 0
   123   000600  00                 	db	0
   124   000601                     STR_4:
   125   000601  65                 	db	101	;'e'
   126   000602  6D                 	db	109	;'m'
   127   000603  65                 	db	101	;'e'
   128   000604  72                 	db	114	;'r'
   129   000605  67                 	db	103	;'g'
   130   000606  65                 	db	101	;'e'
   131   000607  6E                 	db	110	;'n'
   132   000608  63                 	db	99	;'c'
   133   000609  79                 	db	121	;'y'
   134   00060A  20                 	db	32
   135   00060B  6F                 	db	111	;'o'
   136   00060C  66                 	db	102	;'f'
   137   00060D  66                 	db	102	;'f'
   138   00060E  0A                 	db	10
   139   00060F  0D                 	db	13
   140   000610  00                 	db	0
   141   000611                     STR_3:
   142   000611  65                 	db	101	;'e'
   143   000612  6D                 	db	109	;'m'
   144   000613  65                 	db	101	;'e'
   145   000614  72                 	db	114	;'r'
   146   000615  67                 	db	103	;'g'
   147   000616  65                 	db	101	;'e'
   148   000617  6E                 	db	110	;'n'
   149   000618  63                 	db	99	;'c'
   150   000619  79                 	db	121	;'y'
   151   00061A  0A                 	db	10
   152   00061B  0D                 	db	13
   153   00061C  00                 	db	0
   154   00061D                     STR_2:
   155   00061D  73                 	db	115	;'s'
   156   00061E  74                 	db	116	;'t'
   157   00061F  61                 	db	97	;'a'
   158   000620  72                 	db	114	;'r'
   159   000621  74                 	db	116	;'t'
   160   000622  0A                 	db	10
   161   000623  0D                 	db	13
   162   000624  00                 	db	0
   163   000625                     STR_1:
   164   000625  73                 	db	115	;'s'
   165   000626  74                 	db	116	;'t'
   166   000627  6F                 	db	111	;'o'
   167   000628  70                 	db	112	;'p'
   168   000629  0A                 	db	10
   169   00062A  0D                 	db	13
   170   00062B  00                 	db	0
   171   00062C  00                 	db	0	; dummy byte at the end
   172   000000                     
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176   000D68                     __pcinit:
   177                           	callstack 0
   178   000D68                     start_initialization:
   179                           	callstack 0
   180   000D68                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Initialize objects allocated to COMRAM (10 bytes)
   184                           ; load TBLPTR registers with __pidataCOMRAM
   185   000D68  0E46               	movlw	low __pidataCOMRAM
   186   000D6A  6EF6               	movwf	tblptrl,c
   187   000D6C  0E0E               	movlw	high __pidataCOMRAM
   188   000D6E  6EF7               	movwf	tblptrh,c
   189   000D70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   190   000D72  6EF8               	movwf	tblptru,c
   191   000D74  EE00  F058         	lfsr	0,__pdataCOMRAM
   192   000D78  EE10 F00A          	lfsr	1,10
   193   000D7C                     copy_data0:
   194   000D7C  0009               	tblrd		*+
   195   000D7E  CFF5 FFEE          	movff	tablat,postinc0
   196   000D82  50E5               	movf	postdec1,w,c
   197   000D84  50E1               	movf	fsr1l,w,c
   198   000D86  E1FA               	bnz	copy_data0
   199                           
   200                           ; Clear objects allocated to COMRAM (42 bytes)
   201   000D88  EE00  F02E         	lfsr	0,__pbssCOMRAM
   202   000D8C  0E2A               	movlw	42
   203   000D8E                     clear_0:
   204   000D8E  6AEE               	clrf	postinc0,c
   205   000D90  06E8               	decf	wreg,f,c
   206   000D92  E1FD               	bnz	clear_0
   207   000D94                     end_of_initialization:
   208                           	callstack 0
   209   000D94                     __end_of__initialization:
   210                           	callstack 0
   211   000D94  9062               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   212   000D96  9262               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   213   000D98  0E00               	movlw	low (__Lsmallconst shr (0+16))
   214   000D9A  6EF8               	movwf	tblptru,c
   215   000D9C  0E06               	movlw	high __Lsmallconst
   216   000D9E  6EF7               	movwf	tblptrh,c
   217   000DA0  0100               	movlb	0
   218   000DA2  EF17  F003         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221   00002E                     __pbssCOMRAM:
   222                           	callstack 0
   223   00002E                     _str:
   224                           	callstack 0
   225   00002E                     	ds	20
   226   000042                     _lenStr:
   227                           	callstack 0
   228   000042                     	ds	2
   229   000044                     _mystring:
   230                           	callstack 0
   231   000044                     	ds	20
   232                           
   233                           	psect	dataCOMRAM
   234   000058                     __pdataCOMRAM:
   235                           	callstack 0
   236   000058                     main@F3085:
   237                           	callstack 0
   238   000058                     	ds	10
   239                           
   240                           	psect	cstackCOMRAM
   241   000001                     __pcstackCOMRAM:
   242                           	callstack 0
   243   000001                     ?___awmod:
   244                           	callstack 0
   245   000001                     i1UART_Write@data:
   246                           	callstack 0
   247   000001                     ___awmod@dividend:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x0
   251   000001                     	ds	2
   252   000003                     ___awmod@divisor:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x2
   256   000003                     	ds	2
   257   000005                     ___awmod@counter:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x4
   261   000005                     	ds	1
   262   000006                     ___awmod@sign:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x5
   266   000006                     	ds	1
   267   000007                     
   268                           ; 1 bytes @ 0x6
   269   000007                     	ds	1
   270   000008                     ??_Lo_ISR:
   271                           
   272                           ; 1 bytes @ 0x7
   273   000008                     	ds	5
   274   00000D                     UART_Write@data:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0xC
   278   00000D                     	ds	1
   279   00000E                     UART_Write_Text@text:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0xD
   283   00000E                     	ds	1
   284   00000F                     ??_UART_Write_Text:
   285                           
   286                           ; 1 bytes @ 0xE
   287   00000F                     	ds	1
   288   000010                     UART_Write_Text@i:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0xF
   292   000010                     	ds	2
   293   000012                     ??_main:
   294                           
   295                           ; 1 bytes @ 0x11
   296   000012                     	ds	2
   297   000014                     main@number:
   298                           	callstack 0
   299                           
   300                           ; 10 bytes @ 0x13
   301   000014                     	ds	10
   302   00001E                     main@i_184:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x1D
   306   00001E                     	ds	2
   307   000020                     main@i_187:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x1F
   311   000020                     	ds	2
   312   000022                     main@normal:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x21
   316   000022                     	ds	2
   317   000024                     main@i:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x23
   321   000024                     	ds	2
   322   000026                     main@i_178:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x25
   326   000026                     	ds	2
   327   000028                     main@i_179:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x27
   331   000028                     	ds	2
   332   00002A                     main@emergency:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x29
   336   00002A                     	ds	2
   337   00002C                     main@count:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x2B
   341   00002C                     	ds	2
   342                           
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 10 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  i               2   31[COMRAM] int 
   353 ;;  i               2   29[COMRAM] int 
   354 ;;  i               2   39[COMRAM] int 
   355 ;;  i               2   37[COMRAM] int 
   356 ;;  i               2   35[COMRAM] int 
   357 ;;  number         10   19[COMRAM] unsigned char [10]
   358 ;;  count           2   43[COMRAM] int 
   359 ;;  emergency       2   41[COMRAM] int 
   360 ;;  normal          2   33[COMRAM] int 
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   370 ;;      Params:         0       0       0       0       0       0       0
   371 ;;      Locals:        26       0       0       0       0       0       0
   372 ;;      Temps:          2       0       0       0       0       0       0
   373 ;;      Totals:        28       0       0       0       0       0       0
   374 ;;Total ram usage:       28 bytes
   375 ;; Hardware stack levels required when called: 6
   376 ;; This function calls:
   377 ;;		_SYSTEM_Initialize
   378 ;;		_UART_Write_Text
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385   00062E                     __ptext0:
   386                           	callstack 0
   387   00062E                     _main:
   388                           	callstack 25
   389   00062E                     
   390                           ;main.c: 12:     unsigned char number[] = {0xf7, 0x24, 0xdd, 0xed, 0x2e, 0x6b, 0xfb, 0x2
      +                          5, 0xff, 0x6f};
   391   00062E  EE20  F058         	lfsr	2,main@F3085
   392   000632  EE10  F014         	lfsr	1,main@number
   393   000636  0E09               	movlw	9
   394   000638                     u661:
   395   000638  CFDB FFE3          	movff	plusw2,plusw1
   396   00063C  06E8               	decf	wreg,f,c
   397   00063E  E2FC               	bc	u661
   398   000640                     
   399                           ;main.c: 13:     int emergency = 0;
   400   000640  0E00               	movlw	0
   401   000642  6E2B               	movwf	(main@emergency+1)^0,c
   402   000644  0E00               	movlw	0
   403   000646  6E2A               	movwf	main@emergency^0,c
   404   000648                     
   405                           ;main.c: 14:     SYSTEM_Initialize() ;
   406   000648  EC02  F007         	call	_SYSTEM_Initialize	;wreg free
   407   00064C                     
   408                           ;main.c: 15:     int count = 0;
   409   00064C  0E00               	movlw	0
   410   00064E  6E2D               	movwf	(main@count+1)^0,c
   411   000650  0E00               	movlw	0
   412   000652  6E2C               	movwf	main@count^0,c
   413   000654                     
   414                           ;main.c: 16:     TRISD = 0;
   415   000654  0E00               	movlw	0
   416   000656  6E95               	movwf	149,c	;volatile
   417   000658                     
   418                           ;main.c: 17:     LATD = 0;
   419   000658  0E00               	movlw	0
   420   00065A  6E8C               	movwf	140,c	;volatile
   421   00065C                     
   422                           ;main.c: 18:     LATA = 0;
   423   00065C  0E00               	movlw	0
   424   00065E  6E89               	movwf	137,c	;volatile
   425   000660                     
   426                           ;main.c: 19:     TRISA = 0;
   427   000660  0E00               	movlw	0
   428   000662  6E92               	movwf	146,c	;volatile
   429   000664                     
   430                           ;main.c: 20:     TRISE = 0;
   431   000664  0E00               	movlw	0
   432   000666  6E96               	movwf	150,c	;volatile
   433   000668                     
   434                           ;main.c: 21:     LATE = 1;
   435   000668  0E01               	movlw	1
   436   00066A  6E8D               	movwf	141,c	;volatile
   437   00066C                     
   438                           ;main.c: 22:     PORTB = 0;
   439   00066C  0E00               	movlw	0
   440   00066E  6E81               	movwf	129,c	;volatile
   441   000670                     
   442                           ;main.c: 23:     int normal =1;
   443   000670  0E00               	movlw	0
   444   000672  6E23               	movwf	(main@normal+1)^0,c
   445   000674  0E01               	movlw	1
   446   000676  6E22               	movwf	main@normal^0,c
   447   000678                     
   448                           ;main.c: 24:     TRISB = 0b00000111;
   449   000678  0E07               	movlw	7
   450   00067A  6E93               	movwf	147,c	;volatile
   451   00067C                     l1421:
   452                           
   453                           ;main.c: 26:         if(normal == 1){
   454   00067C  0422               	decf	main@normal^0,w,c
   455   00067E  1023               	iorwf	(main@normal+1)^0,w,c
   456   000680  A4D8               	btfss	status,2,c
   457   000682  EF45  F003         	goto	u671
   458   000686  EF47  F003         	goto	u670
   459   00068A                     u671:
   460   00068A  EF15  F004         	goto	l1495
   461   00068E                     u670:
   462   00068E                     
   463                           ;main.c: 27:             if(LATE == 1){
   464   00068E  048D               	decf	141,w,c	;volatile
   465   000690  A4D8               	btfss	status,2,c
   466   000692  EF4D  F003         	goto	u681
   467   000696  EF4F  F003         	goto	u680
   468   00069A                     u681:
   469   00069A  EF8B  F003         	goto	l1447
   470   00069E                     u680:
   471   00069E                     
   472                           ;main.c: 28:                 for(int i = 9;i > 0; i--){
   473   00069E  0E00               	movlw	0
   474   0006A0  6E25               	movwf	(main@i+1)^0,c
   475   0006A2  0E09               	movlw	9
   476   0006A4  6E24               	movwf	main@i^0,c
   477   0006A6                     l1431:
   478                           
   479                           ;main.c: 29:                     LATA = number[i];
   480   0006A6  5024               	movf	main@i^0,w,c
   481   0006A8  0F14               	addlw	low main@number
   482   0006AA  6ED9               	movwf	fsr2l,c
   483   0006AC  6ADA               	clrf	fsr2h,c
   484   0006AE  50DF               	movf	indf2,w,c
   485   0006B0  6E89               	movwf	137,c	;volatile
   486   0006B2                     
   487                           ;main.c: 30:                     _delay((unsigned long)((800)*(125000/4000.0)));
   488   0006B2  0E21               	movlw	33
   489   0006B4  6E12               	movwf	??_main^0,c
   490   0006B6  0E76               	movlw	118
   491   0006B8                     u1107:
   492   0006B8  2EE8               	decfsz	wreg,f,c
   493   0006BA  D7FE               	bra	u1107
   494   0006BC  2E12               	decfsz	??_main^0,f,c
   495   0006BE  D7FC               	bra	u1107
   496   0006C0  D000               	nop2	
   497   0006C2                     
   498                           ;main.c: 31:                     if(PORTBbits.RB0 == 0 || PORTBbits.RB2 == 0){
   499   0006C2  A081               	btfss	129,0,c	;volatile
   500   0006C4  EF66  F003         	goto	u691
   501   0006C8  EF68  F003         	goto	u690
   502   0006CC                     u691:
   503   0006CC  EF6F  F003         	goto	l1439
   504   0006D0                     u690:
   505   0006D0  B481               	btfsc	129,2,c	;volatile
   506   0006D2  EF6D  F003         	goto	u701
   507   0006D6  EF6F  F003         	goto	u700
   508   0006DA                     u701:
   509   0006DA  EF77  F003         	goto	l1441
   510   0006DE                     u700:
   511   0006DE                     l1439:
   512                           
   513                           ;main.c: 32:                         LATE = 0;
   514   0006DE  0E00               	movlw	0
   515   0006E0  6E8D               	movwf	141,c	;volatile
   516                           
   517                           ;main.c: 33:                         normal = 0;
   518   0006E2  0E00               	movlw	0
   519   0006E4  6E23               	movwf	(main@normal+1)^0,c
   520   0006E6  0E00               	movlw	0
   521   0006E8  6E22               	movwf	main@normal^0,c
   522                           
   523                           ;main.c: 35:                         break;
   524   0006EA  EF87  F003         	goto	l1445
   525   0006EE                     l1441:
   526                           
   527                           ;main.c: 37:                 }
   528   0006EE  0624               	decf	main@i^0,f,c
   529   0006F0  A0D8               	btfss	status,0,c
   530   0006F2  0625               	decf	(main@i+1)^0,f,c
   531   0006F4  BE25               	btfsc	(main@i+1)^0,7,c
   532   0006F6  EF87  F003         	goto	u710
   533   0006FA  5025               	movf	(main@i+1)^0,w,c
   534   0006FC  E106               	bnz	u711
   535   0006FE  0424               	decf	main@i^0,w,c
   536   000700  B0D8               	btfsc	status,0,c
   537   000702  EF85  F003         	goto	u711
   538   000706  EF87  F003         	goto	u710
   539   00070A                     u711:
   540   00070A  EF53  F003         	goto	l1431
   541   00070E                     u710:
   542   00070E                     l1445:
   543                           
   544                           ;main.c: 38:                 LATE = 2;
   545   00070E  0E02               	movlw	2
   546   000710  6E8D               	movwf	141,c	;volatile
   547                           
   548                           ;main.c: 39:             }else if(LATE == 2){
   549   000712  EF15  F004         	goto	l1495
   550   000716                     l1447:
   551   000716  0E02               	movlw	2
   552   000718  188D               	xorwf	141,w,c	;volatile
   553   00071A  A4D8               	btfss	status,2,c
   554   00071C  EF92  F003         	goto	u721
   555   000720  EF94  F003         	goto	u720
   556   000724                     u721:
   557   000724  EFD0  F003         	goto	l1471
   558   000728                     u720:
   559   000728                     
   560                           ;main.c: 40:                 for(int i = 4;i > 0; i--){
   561   000728  0E00               	movlw	0
   562   00072A  6E27               	movwf	(main@i_178+1)^0,c
   563   00072C  0E04               	movlw	4
   564   00072E  6E26               	movwf	main@i_178^0,c
   565   000730                     l1455:
   566                           
   567                           ;main.c: 41:                     LATA = number[i];
   568   000730  5026               	movf	main@i_178^0,w,c
   569   000732  0F14               	addlw	low main@number
   570   000734  6ED9               	movwf	fsr2l,c
   571   000736  6ADA               	clrf	fsr2h,c
   572   000738  50DF               	movf	indf2,w,c
   573   00073A  6E89               	movwf	137,c	;volatile
   574   00073C                     
   575                           ;main.c: 42:                     _delay((unsigned long)((800)*(125000/4000.0)));
   576   00073C  0E21               	movlw	33
   577   00073E  6E12               	movwf	??_main^0,c
   578   000740  0E76               	movlw	118
   579   000742                     u1117:
   580   000742  2EE8               	decfsz	wreg,f,c
   581   000744  D7FE               	bra	u1117
   582   000746  2E12               	decfsz	??_main^0,f,c
   583   000748  D7FC               	bra	u1117
   584   00074A  D000               	nop2	
   585   00074C                     
   586                           ;main.c: 43:                     if(PORTBbits.RB0 == 0 || PORTBbits.RB2 == 0){
   587   00074C  A081               	btfss	129,0,c	;volatile
   588   00074E  EFAB  F003         	goto	u731
   589   000752  EFAD  F003         	goto	u730
   590   000756                     u731:
   591   000756  EFB4  F003         	goto	l1463
   592   00075A                     u730:
   593   00075A  B481               	btfsc	129,2,c	;volatile
   594   00075C  EFB2  F003         	goto	u741
   595   000760  EFB4  F003         	goto	u740
   596   000764                     u741:
   597   000764  EFBC  F003         	goto	l1465
   598   000768                     u740:
   599   000768                     l1463:
   600                           
   601                           ;main.c: 44:                         LATE = 0;
   602   000768  0E00               	movlw	0
   603   00076A  6E8D               	movwf	141,c	;volatile
   604                           
   605                           ;main.c: 45:                         normal = 0;
   606   00076C  0E00               	movlw	0
   607   00076E  6E23               	movwf	(main@normal+1)^0,c
   608   000770  0E00               	movlw	0
   609   000772  6E22               	movwf	main@normal^0,c
   610                           
   611                           ;main.c: 46:                         break;
   612   000774  EFCC  F003         	goto	l1469
   613   000778                     l1465:
   614                           
   615                           ;main.c: 48:                 }
   616   000778  0626               	decf	main@i_178^0,f,c
   617   00077A  A0D8               	btfss	status,0,c
   618   00077C  0627               	decf	(main@i_178+1)^0,f,c
   619   00077E  BE27               	btfsc	(main@i_178+1)^0,7,c
   620   000780  EFCC  F003         	goto	u750
   621   000784  5027               	movf	(main@i_178+1)^0,w,c
   622   000786  E106               	bnz	u751
   623   000788  0426               	decf	main@i_178^0,w,c
   624   00078A  B0D8               	btfsc	status,0,c
   625   00078C  EFCA  F003         	goto	u751
   626   000790  EFCC  F003         	goto	u750
   627   000794                     u751:
   628   000794  EF98  F003         	goto	l1455
   629   000798                     u750:
   630   000798                     l1469:
   631                           
   632                           ;main.c: 49:                 LATE = 4;
   633   000798  0E04               	movlw	4
   634   00079A  6E8D               	movwf	141,c	;volatile
   635                           
   636                           ;main.c: 50:             }else if(LATE ==4){
   637   00079C  EF15  F004         	goto	l1495
   638   0007A0                     l1471:
   639   0007A0  0E04               	movlw	4
   640   0007A2  188D               	xorwf	141,w,c	;volatile
   641   0007A4  A4D8               	btfss	status,2,c
   642   0007A6  EFD7  F003         	goto	u761
   643   0007AA  EFD9  F003         	goto	u760
   644   0007AE                     u761:
   645   0007AE  EF15  F004         	goto	l45
   646   0007B2                     u760:
   647   0007B2                     
   648                           ;main.c: 51:                 for(int i = 9;i > 0; i--){
   649   0007B2  0E00               	movlw	0
   650   0007B4  6E29               	movwf	(main@i_179+1)^0,c
   651   0007B6  0E09               	movlw	9
   652   0007B8  6E28               	movwf	main@i_179^0,c
   653   0007BA                     l1479:
   654                           
   655                           ;main.c: 52:                     LATA = number[i];
   656   0007BA  5028               	movf	main@i_179^0,w,c
   657   0007BC  0F14               	addlw	low main@number
   658   0007BE  6ED9               	movwf	fsr2l,c
   659   0007C0  6ADA               	clrf	fsr2h,c
   660   0007C2  50DF               	movf	indf2,w,c
   661   0007C4  6E89               	movwf	137,c	;volatile
   662   0007C6                     
   663                           ;main.c: 53:                     _delay((unsigned long)((800)*(125000/4000.0)));
   664   0007C6  0E21               	movlw	33
   665   0007C8  6E12               	movwf	??_main^0,c
   666   0007CA  0E76               	movlw	118
   667   0007CC                     u1127:
   668   0007CC  2EE8               	decfsz	wreg,f,c
   669   0007CE  D7FE               	bra	u1127
   670   0007D0  2E12               	decfsz	??_main^0,f,c
   671   0007D2  D7FC               	bra	u1127
   672   0007D4  D000               	nop2	
   673   0007D6                     
   674                           ;main.c: 54:                     if(PORTBbits.RB0 == 0 || PORTBbits.RB2 == 0){
   675   0007D6  A081               	btfss	129,0,c	;volatile
   676   0007D8  EFF0  F003         	goto	u771
   677   0007DC  EFF2  F003         	goto	u770
   678   0007E0                     u771:
   679   0007E0  EFF9  F003         	goto	l1487
   680   0007E4                     u770:
   681   0007E4  B481               	btfsc	129,2,c	;volatile
   682   0007E6  EFF7  F003         	goto	u781
   683   0007EA  EFF9  F003         	goto	u780
   684   0007EE                     u781:
   685   0007EE  EF01  F004         	goto	l1489
   686   0007F2                     u780:
   687   0007F2                     l1487:
   688                           
   689                           ;main.c: 55:                         LATE = 0;
   690   0007F2  0E00               	movlw	0
   691   0007F4  6E8D               	movwf	141,c	;volatile
   692                           
   693                           ;main.c: 56:                         normal = 0;
   694   0007F6  0E00               	movlw	0
   695   0007F8  6E23               	movwf	(main@normal+1)^0,c
   696   0007FA  0E00               	movlw	0
   697   0007FC  6E22               	movwf	main@normal^0,c
   698                           
   699                           ;main.c: 57:                         break;
   700   0007FE  EF11  F004         	goto	l1493
   701   000802                     l1489:
   702                           
   703                           ;main.c: 59:                 }
   704   000802  0628               	decf	main@i_179^0,f,c
   705   000804  A0D8               	btfss	status,0,c
   706   000806  0629               	decf	(main@i_179+1)^0,f,c
   707   000808  BE29               	btfsc	(main@i_179+1)^0,7,c
   708   00080A  EF11  F004         	goto	u790
   709   00080E  5029               	movf	(main@i_179+1)^0,w,c
   710   000810  E106               	bnz	u791
   711   000812  0428               	decf	main@i_179^0,w,c
   712   000814  B0D8               	btfsc	status,0,c
   713   000816  EF0F  F004         	goto	u791
   714   00081A  EF11  F004         	goto	u790
   715   00081E                     u791:
   716   00081E  EFDD  F003         	goto	l1479
   717   000822                     u790:
   718   000822                     l1493:
   719                           
   720                           ;main.c: 60:                 LATE = 1;
   721   000822  0E01               	movlw	1
   722   000824  6E8D               	movwf	141,c	;volatile
   723   000826  EF15  F004         	goto	l1495
   724   00082A                     l45:
   725   00082A                     l1495:
   726                           
   727                           ;main.c: 63:         if (CCPR1L == 0x04 && CCP1CONbits.DC1B == 0b00){
   728   00082A  0E04               	movlw	4
   729   00082C  18BE               	xorwf	190,w,c	;volatile
   730   00082E  A4D8               	btfss	status,2,c
   731   000830  EF1C  F004         	goto	u801
   732   000834  EF1E  F004         	goto	u800
   733   000838                     u801:
   734   000838  EF50  F004         	goto	l1513
   735   00083C                     u800:
   736   00083C  38BD               	swapf	189,w,c	;volatile
   737   00083E  0B03               	andlw	3
   738   000840  0900               	iorlw	0
   739   000842  A4D8               	btfss	status,2,c
   740   000844  EF26  F004         	goto	u811
   741   000848  EF28  F004         	goto	u810
   742   00084C                     u811:
   743   00084C  EF50  F004         	goto	l1513
   744   000850                     u810:
   745   000850                     
   746                           ;main.c: 64:             count++;
   747   000850  4A2C               	infsnz	main@count^0,f,c
   748   000852  2A2D               	incf	(main@count+1)^0,f,c
   749   000854                     
   750                           ;main.c: 65:             normal = 0;
   751   000854  0E00               	movlw	0
   752   000856  6E23               	movwf	(main@normal+1)^0,c
   753   000858  0E00               	movlw	0
   754   00085A  6E22               	movwf	main@normal^0,c
   755   00085C                     
   756                           ;main.c: 66:                 if(emergency == 1){
   757   00085C  042A               	decf	main@emergency^0,w,c
   758   00085E  102B               	iorwf	(main@emergency+1)^0,w,c
   759   000860  A4D8               	btfss	status,2,c
   760   000862  EF35  F004         	goto	u821
   761   000866  EF37  F004         	goto	u820
   762   00086A                     u821:
   763   00086A  EF3B  F004         	goto	l60
   764   00086E                     u820:
   765   00086E                     
   766                           ;main.c: 67:                     LATD=0b00001111;
   767   00086E  0E0F               	movlw	15
   768   000870  6E8C               	movwf	140,c	;volatile
   769                           
   770                           ;main.c: 68:                 }else if(count%2==1){
   771   000872  EF48  F004         	goto	l1511
   772   000876                     l60:
   773   000876  A02C               	btfss	main@count^0,0,c
   774   000878  EF40  F004         	goto	u831
   775   00087C  EF42  F004         	goto	u830
   776   000880                     u831:
   777   000880  EF46  F004         	goto	l1509
   778   000884                     u830:
   779   000884                     
   780                           ;main.c: 69:                     LATD=0b00000101;
   781   000884  0E05               	movlw	5
   782   000886  6E8C               	movwf	140,c	;volatile
   783                           
   784                           ;main.c: 70:                 }else{
   785   000888  EF48  F004         	goto	l1511
   786   00088C                     l1509:
   787                           
   788                           ;main.c: 71:                     LATD=0b00001010;
   789   00088C  0E0A               	movlw	10
   790   00088E  6E8C               	movwf	140,c	;volatile
   791   000890                     l1511:
   792                           
   793                           ;main.c: 73:             _delay((unsigned long)((100)*(125000/4000.0)));
   794   000890  0E05               	movlw	5
   795   000892  6E12               	movwf	??_main^0,c
   796   000894  0E0D               	movlw	13
   797   000896                     u1137:
   798   000896  2EE8               	decfsz	wreg,f,c
   799   000898  D7FE               	bra	u1137
   800   00089A  2E12               	decfsz	??_main^0,f,c
   801   00089C  D7FC               	bra	u1137
   802   00089E  D000               	nop2	
   803   0008A0                     l1513:
   804                           
   805                           ;main.c: 75:         if (CCPR1L == 0x0B && CCP1CONbits.DC1B == 0b11){
   806   0008A0  0E0B               	movlw	11
   807   0008A2  18BE               	xorwf	190,w,c	;volatile
   808   0008A4  A4D8               	btfss	status,2,c
   809   0008A6  EF57  F004         	goto	u841
   810   0008AA  EF59  F004         	goto	u840
   811   0008AE                     u841:
   812   0008AE  EF65  F004         	goto	l1519
   813   0008B2                     u840:
   814   0008B2  38BD               	swapf	189,w,c	;volatile
   815   0008B4  0B03               	andlw	3
   816   0008B6  0A03               	xorlw	3
   817   0008B8  A4D8               	btfss	status,2,c
   818   0008BA  EF61  F004         	goto	u851
   819   0008BE  EF63  F004         	goto	u850
   820   0008C2                     u851:
   821   0008C2  EF65  F004         	goto	l1519
   822   0008C6                     u850:
   823   0008C6                     
   824                           ;main.c: 76:             LATD=0b00000000;
   825   0008C6  0E00               	movlw	0
   826   0008C8  6E8C               	movwf	140,c	;volatile
   827   0008CA                     l1519:
   828                           
   829                           ;main.c: 79:         if (PORTBbits.RB1 == 0)
   830   0008CA  B281               	btfsc	129,1,c	;volatile
   831   0008CC  EF6A  F004         	goto	u861
   832   0008D0  EF6C  F004         	goto	u860
   833   0008D4                     u861:
   834   0008D4  EFDA  F004         	goto	l65
   835   0008D8                     u860:
   836   0008D8                     
   837                           ;main.c: 80:         {;main.c: 81:             LATE = 4;
   838   0008D8  0E04               	movlw	4
   839   0008DA  6E8D               	movwf	141,c	;volatile
   840                           
   841                           ;main.c: 82:             LATA = 0;
   842   0008DC  0E00               	movlw	0
   843   0008DE  6E89               	movwf	137,c	;volatile
   844   0008E0                     
   845                           ;main.c: 83:             UART_Write_Text("stop\n\r");
   846   0008E0  0E25               	movlw	low STR_1
   847   0008E2  6E0E               	movwf	UART_Write_Text@text^0,c
   848   0008E4  EC93  F006         	call	_UART_Write_Text	;wreg free
   849   0008E8                     
   850                           ;main.c: 84:             normal = 1;
   851   0008E8  0E00               	movlw	0
   852   0008EA  6E23               	movwf	(main@normal+1)^0,c
   853   0008EC  0E01               	movlw	1
   854   0008EE  6E22               	movwf	main@normal^0,c
   855   0008F0                     
   856                           ;main.c: 85:             count=0;
   857   0008F0  0E00               	movlw	0
   858   0008F2  6E2D               	movwf	(main@count+1)^0,c
   859   0008F4  0E00               	movlw	0
   860   0008F6  6E2C               	movwf	main@count^0,c
   861   0008F8                     l1529:
   862                           
   863                           ;main.c: 87:             {;main.c: 88:                 for (int i = 0; i < 25; i++);
   864   0008F8  0E00               	movlw	0
   865   0008FA  6E1F               	movwf	(main@i_184+1)^0,c
   866   0008FC  0E00               	movlw	0
   867   0008FE  6E1E               	movwf	main@i_184^0,c
   868   000900                     l1535:
   869   000900  4A1E               	infsnz	main@i_184^0,f,c
   870   000902  2A1F               	incf	(main@i_184+1)^0,f,c
   871   000904  BE1F               	btfsc	(main@i_184+1)^0,7,c
   872   000906  EF8E  F004         	goto	u871
   873   00090A  501F               	movf	(main@i_184+1)^0,w,c
   874   00090C  E109               	bnz	u870
   875   00090E  0E19               	movlw	25
   876   000910  5C1E               	subwf	main@i_184^0,w,c
   877   000912  A0D8               	btfss	status,0,c
   878   000914  EF8E  F004         	goto	u871
   879   000918  EF90  F004         	goto	u870
   880   00091C                     u871:
   881   00091C  EF80  F004         	goto	l1535
   882   000920                     u870:
   883   000920                     
   884                           ;main.c: 89:                 count++;
   885   000920  4A2C               	infsnz	main@count^0,f,c
   886   000922  2A2D               	incf	(main@count+1)^0,f,c
   887   000924                     
   888                           ;main.c: 90:                 if(count%2==1){
   889   000924  A02C               	btfss	main@count^0,0,c
   890   000926  EF97  F004         	goto	u881
   891   00092A  EF99  F004         	goto	u880
   892   00092E                     u881:
   893   00092E  EF9D  F004         	goto	l1545
   894   000932                     u880:
   895   000932                     
   896                           ;main.c: 91:                     LATD=0b00000101;
   897   000932  0E05               	movlw	5
   898   000934  6E8C               	movwf	140,c	;volatile
   899                           
   900                           ;main.c: 92:                 }else{
   901   000936  EF9F  F004         	goto	l1547
   902   00093A                     l1545:
   903                           
   904                           ;main.c: 93:                     LATD=0b00001010;
   905   00093A  0E0A               	movlw	10
   906   00093C  6E8C               	movwf	140,c	;volatile
   907   00093E                     l1547:
   908                           
   909                           ;main.c: 95:                 if (CCPR1L == 0x0B && CCP1CONbits.DC1B == 0b11){
   910   00093E  0E0B               	movlw	11
   911   000940  18BE               	xorwf	190,w,c	;volatile
   912   000942  A4D8               	btfss	status,2,c
   913   000944  EFA6  F004         	goto	u891
   914   000948  EFA8  F004         	goto	u890
   915   00094C                     u891:
   916   00094C  EFB4  F004         	goto	l1555
   917   000950                     u890:
   918   000950  38BD               	swapf	189,w,c	;volatile
   919   000952  0B03               	andlw	3
   920   000954  0A03               	xorlw	3
   921   000956  A4D8               	btfss	status,2,c
   922   000958  EFB0  F004         	goto	u901
   923   00095C  EFB2  F004         	goto	u900
   924   000960                     u901:
   925   000960  EFB4  F004         	goto	l1555
   926   000964                     u900:
   927   000964  EFDA  F004         	goto	l65
   928   000968                     l1555:
   929   000968  38BD               	swapf	189,w,c	;volatile
   930   00096A  0B03               	andlw	3
   931   00096C  0A03               	xorlw	3
   932   00096E  B4D8               	btfsc	status,2,c
   933   000970  EFBC  F004         	goto	u911
   934   000974  EFBE  F004         	goto	u910
   935   000978                     u911:
   936   000978  EFCD  F004         	goto	l1559
   937   00097C                     u910:
   938   00097C                     
   939                           ;main.c: 98:                     CCP1CONbits.DC1B++;
   940   00097C  0E01               	movlw	1
   941   00097E  6E12               	movwf	??_main^0,c
   942   000980  38BD               	swapf	189,w,c	;volatile
   943   000982  0B03               	andlw	3
   944   000984  6E13               	movwf	(??_main+1)^0,c
   945   000986  5012               	movf	??_main^0,w,c
   946   000988  2613               	addwf	(??_main+1)^0,f,c
   947   00098A  3A13               	swapf	(??_main+1)^0,f,c
   948   00098C  50BD               	movf	189,w,c	;volatile
   949   00098E  1813               	xorwf	(??_main+1)^0,w,c
   950   000990  0BCF               	andlw	-49
   951   000992  1813               	xorwf	(??_main+1)^0,w,c
   952   000994  6EBD               	movwf	189,c	;volatile
   953   000996  EFD0  F004         	goto	l1563
   954   00099A                     l1559:
   955                           
   956                           ;main.c: 100:                 {;main.c: 101:                     CCPR1L++;
   957   00099A  2ABE               	incf	190,f,c	;volatile
   958   00099C                     
   959                           ;main.c: 102:                     CCP1CONbits.DC1B = 0b00;
   960   00099C  0ECF               	movlw	-49
   961   00099E  16BD               	andwf	189,f,c	;volatile
   962   0009A0                     l1563:
   963                           
   964                           ;main.c: 104:                 _delay((unsigned long)((100)*(125000/4000.0)));
   965   0009A0  0E05               	movlw	5
   966   0009A2  6E12               	movwf	??_main^0,c
   967   0009A4  0E0D               	movlw	13
   968   0009A6                     u1147:
   969   0009A6  2EE8               	decfsz	wreg,f,c
   970   0009A8  D7FE               	bra	u1147
   971   0009AA  2E12               	decfsz	??_main^0,f,c
   972   0009AC  D7FC               	bra	u1147
   973   0009AE  D000               	nop2	
   974   0009B0  EF7C  F004         	goto	l1529
   975   0009B4                     l65:
   976                           
   977                           ;main.c: 107:         if(PORTBbits.RB2 == 0){
   978   0009B4  B481               	btfsc	129,2,c	;volatile
   979   0009B6  EFDF  F004         	goto	u921
   980   0009BA  EFE1  F004         	goto	u920
   981   0009BE                     u921:
   982   0009BE  EF3B  F005         	goto	l77
   983   0009C2                     u920:
   984   0009C2                     
   985                           ;main.c: 108:             LATE = 1;
   986   0009C2  0E01               	movlw	1
   987   0009C4  6E8D               	movwf	141,c	;volatile
   988                           
   989                           ;main.c: 109:             LATA = 0;
   990   0009C6  0E00               	movlw	0
   991   0009C8  6E89               	movwf	137,c	;volatile
   992                           
   993                           ;main.c: 110:             normal = 0;
   994   0009CA  0E00               	movlw	0
   995   0009CC  6E23               	movwf	(main@normal+1)^0,c
   996   0009CE  0E00               	movlw	0
   997   0009D0  6E22               	movwf	main@normal^0,c
   998   0009D2                     
   999                           ;main.c: 111:             UART_Write_Text("start\n\r");
  1000   0009D2  0E1D               	movlw	low STR_2
  1001   0009D4  6E0E               	movwf	UART_Write_Text@text^0,c
  1002   0009D6  EC93  F006         	call	_UART_Write_Text	;wreg free
  1003   0009DA                     
  1004                           ;main.c: 112:             count=0;
  1005   0009DA  0E00               	movlw	0
  1006   0009DC  6E2D               	movwf	(main@count+1)^0,c
  1007   0009DE  0E00               	movlw	0
  1008   0009E0  6E2C               	movwf	main@count^0,c
  1009   0009E2                     l1571:
  1010                           
  1011                           ;main.c: 114:                 count++;
  1012   0009E2  4A2C               	infsnz	main@count^0,f,c
  1013   0009E4  2A2D               	incf	(main@count+1)^0,f,c
  1014   0009E6                     
  1015                           ;main.c: 115:                 if(count%2==1){
  1016   0009E6  A02C               	btfss	main@count^0,0,c
  1017   0009E8  EFF8  F004         	goto	u931
  1018   0009EC  EFFA  F004         	goto	u930
  1019   0009F0                     u931:
  1020   0009F0  EFFE  F004         	goto	l1577
  1021   0009F4                     u930:
  1022   0009F4                     
  1023                           ;main.c: 116:                     LATD=0b00000101;
  1024   0009F4  0E05               	movlw	5
  1025   0009F6  6E8C               	movwf	140,c	;volatile
  1026                           
  1027                           ;main.c: 117:                 }else{
  1028   0009F8  EF00  F005         	goto	l1579
  1029   0009FC                     l1577:
  1030                           
  1031                           ;main.c: 118:                     LATD=0b00001010;
  1032   0009FC  0E0A               	movlw	10
  1033   0009FE  6E8C               	movwf	140,c	;volatile
  1034   000A00                     l1579:
  1035                           
  1036                           ;main.c: 120:                 if (CCPR1L == 0x04 && CCP1CONbits.DC1B == 0b00){
  1037   000A00  0E04               	movlw	4
  1038   000A02  18BE               	xorwf	190,w,c	;volatile
  1039   000A04  A4D8               	btfss	status,2,c
  1040   000A06  EF07  F005         	goto	u941
  1041   000A0A  EF09  F005         	goto	u940
  1042   000A0E                     u941:
  1043   000A0E  EF15  F005         	goto	l1587
  1044   000A12                     u940:
  1045   000A12  38BD               	swapf	189,w,c	;volatile
  1046   000A14  0B03               	andlw	3
  1047   000A16  0900               	iorlw	0
  1048   000A18  A4D8               	btfss	status,2,c
  1049   000A1A  EF11  F005         	goto	u951
  1050   000A1E  EF13  F005         	goto	u950
  1051   000A22                     u951:
  1052   000A22  EF15  F005         	goto	l1587
  1053   000A26                     u950:
  1054   000A26  EF3B  F005         	goto	l77
  1055   000A2A                     l1587:
  1056   000A2A  38BD               	swapf	189,w,c	;volatile
  1057   000A2C  0B03               	andlw	3
  1058   000A2E  0900               	iorlw	0
  1059   000A30  B4D8               	btfsc	status,2,c
  1060   000A32  EF1D  F005         	goto	u961
  1061   000A36  EF1F  F005         	goto	u960
  1062   000A3A                     u961:
  1063   000A3A  EF2E  F005         	goto	l1591
  1064   000A3E                     u960:
  1065   000A3E                     
  1066                           ;main.c: 123:                     CCP1CONbits.DC1B --;
  1067   000A3E  0E01               	movlw	1
  1068   000A40  6E12               	movwf	??_main^0,c
  1069   000A42  38BD               	swapf	189,w,c	;volatile
  1070   000A44  0B03               	andlw	3
  1071   000A46  6E13               	movwf	(??_main+1)^0,c
  1072   000A48  5012               	movf	??_main^0,w,c
  1073   000A4A  5E13               	subwf	(??_main+1)^0,f,c
  1074   000A4C  3A13               	swapf	(??_main+1)^0,f,c
  1075   000A4E  50BD               	movf	189,w,c	;volatile
  1076   000A50  1813               	xorwf	(??_main+1)^0,w,c
  1077   000A52  0BCF               	andlw	-49
  1078   000A54  1813               	xorwf	(??_main+1)^0,w,c
  1079   000A56  6EBD               	movwf	189,c	;volatile
  1080   000A58  EF31  F005         	goto	l1595
  1081   000A5C                     l1591:
  1082                           
  1083                           ;main.c: 125:                 {;main.c: 126:                     CCPR1L--;
  1084   000A5C  06BE               	decf	190,f,c	;volatile
  1085   000A5E                     
  1086                           ;main.c: 127:                     CCP1CONbits.DC1B = 0b11;
  1087   000A5E  0E30               	movlw	48
  1088   000A60  12BD               	iorwf	189,f,c	;volatile
  1089   000A62                     l1595:
  1090                           
  1091                           ;main.c: 129:                 _delay((unsigned long)((100)*(125000/4000.0)));
  1092   000A62  0E05               	movlw	5
  1093   000A64  6E12               	movwf	??_main^0,c
  1094   000A66  0E0D               	movlw	13
  1095   000A68                     u1157:
  1096   000A68  2EE8               	decfsz	wreg,f,c
  1097   000A6A  D7FE               	bra	u1157
  1098   000A6C  2E12               	decfsz	??_main^0,f,c
  1099   000A6E  D7FC               	bra	u1157
  1100   000A70  D000               	nop2	
  1101   000A72  EFF1  F004         	goto	l1571
  1102   000A76                     l77:
  1103                           
  1104                           ;main.c: 132:         if(PORTBbits.RB0 == 0){
  1105   000A76  B081               	btfsc	129,0,c	;volatile
  1106   000A78  EF40  F005         	goto	u971
  1107   000A7C  EF42  F005         	goto	u970
  1108   000A80                     u971:
  1109   000A80  EF3E  F003         	goto	l1421
  1110   000A84                     u970:
  1111   000A84                     
  1112                           ;main.c: 133:             LATE = 1;
  1113   000A84  0E01               	movlw	1
  1114   000A86  6E8D               	movwf	141,c	;volatile
  1115                           
  1116                           ;main.c: 134:             LATA = 0;
  1117   000A88  0E00               	movlw	0
  1118   000A8A  6E89               	movwf	137,c	;volatile
  1119                           
  1120                           ;main.c: 135:             count=0;
  1121   000A8C  0E00               	movlw	0
  1122   000A8E  6E2D               	movwf	(main@count+1)^0,c
  1123   000A90  0E00               	movlw	0
  1124   000A92  6E2C               	movwf	main@count^0,c
  1125   000A94                     
  1126                           ;main.c: 136:             if(emergency == 0){
  1127   000A94  502A               	movf	main@emergency^0,w,c
  1128   000A96  102B               	iorwf	(main@emergency+1)^0,w,c
  1129   000A98  A4D8               	btfss	status,2,c
  1130   000A9A  EF51  F005         	goto	u981
  1131   000A9E  EF53  F005         	goto	u980
  1132   000AA2                     u981:
  1133   000AA2  EF57  F005         	goto	l1603
  1134   000AA6                     u980:
  1135   000AA6                     
  1136                           ;main.c: 137:                 UART_Write_Text("emergency\n\r");
  1137   000AA6  0E11               	movlw	low STR_3
  1138   000AA8  6E0E               	movwf	UART_Write_Text@text^0,c
  1139   000AAA  EC93  F006         	call	_UART_Write_Text	;wreg free
  1140   000AAE                     l1603:
  1141                           
  1142                           ;main.c: 140:             {;main.c: 141:                 normal = 0;
  1143   000AAE  0E00               	movlw	0
  1144   000AB0  6E23               	movwf	(main@normal+1)^0,c
  1145   000AB2  0E00               	movlw	0
  1146   000AB4  6E22               	movwf	main@normal^0,c
  1147   000AB6                     
  1148                           ;main.c: 142:                 LATD=0b00001111;
  1149   000AB6  0E0F               	movlw	15
  1150   000AB8  6E8C               	movwf	140,c	;volatile
  1151   000ABA                     
  1152                           ;main.c: 143:                 for (int i = 0; i < 25; i++);
  1153   000ABA  0E00               	movlw	0
  1154   000ABC  6E21               	movwf	(main@i_187+1)^0,c
  1155   000ABE  0E00               	movlw	0
  1156   000AC0  6E20               	movwf	main@i_187^0,c
  1157   000AC2                     l1613:
  1158   000AC2  4A20               	infsnz	main@i_187^0,f,c
  1159   000AC4  2A21               	incf	(main@i_187+1)^0,f,c
  1160   000AC6  BE21               	btfsc	(main@i_187+1)^0,7,c
  1161   000AC8  EF6F  F005         	goto	u991
  1162   000ACC  5021               	movf	(main@i_187+1)^0,w,c
  1163   000ACE  E109               	bnz	u990
  1164   000AD0  0E19               	movlw	25
  1165   000AD2  5C20               	subwf	main@i_187^0,w,c
  1166   000AD4  A0D8               	btfss	status,0,c
  1167   000AD6  EF6F  F005         	goto	u991
  1168   000ADA  EF71  F005         	goto	u990
  1169   000ADE                     u991:
  1170   000ADE  EF61  F005         	goto	l1613
  1171   000AE2                     u990:
  1172   000AE2                     
  1173                           ;main.c: 144:                 if(emergency == 1){
  1174   000AE2  042A               	decf	main@emergency^0,w,c
  1175   000AE4  102B               	iorwf	(main@emergency+1)^0,w,c
  1176   000AE6  A4D8               	btfss	status,2,c
  1177   000AE8  EF78  F005         	goto	u1001
  1178   000AEC  EF7A  F005         	goto	u1000
  1179   000AF0                     u1001:
  1180   000AF0  EFC1  F005         	goto	l1643
  1181   000AF4                     u1000:
  1182   000AF4                     
  1183                           ;main.c: 145:                     if (CCPR1L == 0x0B && CCP1CONbits.DC1B == 0b11){
  1184   000AF4  0E0B               	movlw	11
  1185   000AF6  18BE               	xorwf	190,w,c	;volatile
  1186   000AF8  A4D8               	btfss	status,2,c
  1187   000AFA  EF81  F005         	goto	u1011
  1188   000AFE  EF83  F005         	goto	u1010
  1189   000B02                     u1011:
  1190   000B02  EF9D  F005         	goto	l1633
  1191   000B06                     u1010:
  1192   000B06  38BD               	swapf	189,w,c	;volatile
  1193   000B08  0B03               	andlw	3
  1194   000B0A  0A03               	xorlw	3
  1195   000B0C  A4D8               	btfss	status,2,c
  1196   000B0E  EF8B  F005         	goto	u1021
  1197   000B12  EF8D  F005         	goto	u1020
  1198   000B16                     u1021:
  1199   000B16  EF9D  F005         	goto	l1633
  1200   000B1A                     u1020:
  1201   000B1A                     
  1202                           ;main.c: 146:                         emergency = 0;
  1203   000B1A  0E00               	movlw	0
  1204   000B1C  6E2B               	movwf	(main@emergency+1)^0,c
  1205   000B1E  0E00               	movlw	0
  1206   000B20  6E2A               	movwf	main@emergency^0,c
  1207   000B22                     
  1208                           ;main.c: 147:                         UART_Write_Text("emergency off\n\r");
  1209   000B22  0E01               	movlw	low STR_4
  1210   000B24  6E0E               	movwf	UART_Write_Text@text^0,c
  1211   000B26  EC93  F006         	call	_UART_Write_Text	;wreg free
  1212   000B2A                     
  1213                           ;main.c: 148:                         normal = 1;
  1214   000B2A  0E00               	movlw	0
  1215   000B2C  6E23               	movwf	(main@normal+1)^0,c
  1216   000B2E  0E01               	movlw	1
  1217   000B30  6E22               	movwf	main@normal^0,c
  1218   000B32                     
  1219                           ;main.c: 149:                         LATE = 4;
  1220   000B32  0E04               	movlw	4
  1221   000B34  6E8D               	movwf	141,c	;volatile
  1222                           
  1223                           ;main.c: 150:                         break;
  1224   000B36  EF3E  F003         	goto	l1421
  1225   000B3A                     l1633:
  1226   000B3A  38BD               	swapf	189,w,c	;volatile
  1227   000B3C  0B03               	andlw	3
  1228   000B3E  0A03               	xorlw	3
  1229   000B40  B4D8               	btfsc	status,2,c
  1230   000B42  EFA5  F005         	goto	u1031
  1231   000B46  EFA7  F005         	goto	u1030
  1232   000B4A                     u1031:
  1233   000B4A  EFB6  F005         	goto	l1637
  1234   000B4E                     u1030:
  1235   000B4E                     
  1236                           ;main.c: 152:                         CCP1CONbits.DC1B++;
  1237   000B4E  0E01               	movlw	1
  1238   000B50  6E12               	movwf	??_main^0,c
  1239   000B52  38BD               	swapf	189,w,c	;volatile
  1240   000B54  0B03               	andlw	3
  1241   000B56  6E13               	movwf	(??_main+1)^0,c
  1242   000B58  5012               	movf	??_main^0,w,c
  1243   000B5A  2613               	addwf	(??_main+1)^0,f,c
  1244   000B5C  3A13               	swapf	(??_main+1)^0,f,c
  1245   000B5E  50BD               	movf	189,w,c	;volatile
  1246   000B60  1813               	xorwf	(??_main+1)^0,w,c
  1247   000B62  0BCF               	andlw	-49
  1248   000B64  1813               	xorwf	(??_main+1)^0,w,c
  1249   000B66  6EBD               	movwf	189,c	;volatile
  1250   000B68  EFB9  F005         	goto	l1641
  1251   000B6C                     l1637:
  1252                           
  1253                           ;main.c: 154:                     {;main.c: 155:                         CCPR1L++;
  1254   000B6C  2ABE               	incf	190,f,c	;volatile
  1255   000B6E                     
  1256                           ;main.c: 156:                         CCP1CONbits.DC1B = 0b00;
  1257   000B6E  0ECF               	movlw	-49
  1258   000B70  16BD               	andwf	189,f,c	;volatile
  1259   000B72                     l1641:
  1260                           
  1261                           ;main.c: 158:                     _delay((unsigned long)((100)*(125000/4000.0)));
  1262   000B72  0E05               	movlw	5
  1263   000B74  6E12               	movwf	??_main^0,c
  1264   000B76  0E0D               	movlw	13
  1265   000B78                     u1167:
  1266   000B78  2EE8               	decfsz	wreg,f,c
  1267   000B7A  D7FE               	bra	u1167
  1268   000B7C  2E12               	decfsz	??_main^0,f,c
  1269   000B7E  D7FC               	bra	u1167
  1270   000B80  D000               	nop2	
  1271   000B82                     l1643:
  1272                           
  1273                           ;main.c: 160:                 if(emergency == 0){
  1274   000B82  502A               	movf	main@emergency^0,w,c
  1275   000B84  102B               	iorwf	(main@emergency+1)^0,w,c
  1276   000B86  A4D8               	btfss	status,2,c
  1277   000B88  EFC8  F005         	goto	u1041
  1278   000B8C  EFCA  F005         	goto	u1040
  1279   000B90                     u1041:
  1280   000B90  EF57  F005         	goto	l1603
  1281   000B94                     u1040:
  1282   000B94                     
  1283                           ;main.c: 162:                     if (CCPR1L == 0x04 && CCP1CONbits.DC1B == 0b00){
  1284   000B94  0E04               	movlw	4
  1285   000B96  18BE               	xorwf	190,w,c	;volatile
  1286   000B98  A4D8               	btfss	status,2,c
  1287   000B9A  EFD1  F005         	goto	u1051
  1288   000B9E  EFD3  F005         	goto	u1050
  1289   000BA2                     u1051:
  1290   000BA2  EFE3  F005         	goto	l1653
  1291   000BA6                     u1050:
  1292   000BA6  38BD               	swapf	189,w,c	;volatile
  1293   000BA8  0B03               	andlw	3
  1294   000BAA  0900               	iorlw	0
  1295   000BAC  A4D8               	btfss	status,2,c
  1296   000BAE  EFDB  F005         	goto	u1061
  1297   000BB2  EFDD  F005         	goto	u1060
  1298   000BB6                     u1061:
  1299   000BB6  EFE3  F005         	goto	l1653
  1300   000BBA                     u1060:
  1301   000BBA                     
  1302                           ;main.c: 163:                         emergency = 1;
  1303   000BBA  0E00               	movlw	0
  1304   000BBC  6E2B               	movwf	(main@emergency+1)^0,c
  1305   000BBE  0E01               	movlw	1
  1306   000BC0  6E2A               	movwf	main@emergency^0,c
  1307                           
  1308                           ;main.c: 164:                         break;
  1309   000BC2  EF3E  F003         	goto	l1421
  1310   000BC6                     l1653:
  1311   000BC6  38BD               	swapf	189,w,c	;volatile
  1312   000BC8  0B03               	andlw	3
  1313   000BCA  0900               	iorlw	0
  1314   000BCC  B4D8               	btfsc	status,2,c
  1315   000BCE  EFEB  F005         	goto	u1071
  1316   000BD2  EFED  F005         	goto	u1070
  1317   000BD6                     u1071:
  1318   000BD6  EFFC  F005         	goto	l1657
  1319   000BDA                     u1070:
  1320   000BDA                     
  1321                           ;main.c: 166:                         CCP1CONbits.DC1B --;
  1322   000BDA  0E01               	movlw	1
  1323   000BDC  6E12               	movwf	??_main^0,c
  1324   000BDE  38BD               	swapf	189,w,c	;volatile
  1325   000BE0  0B03               	andlw	3
  1326   000BE2  6E13               	movwf	(??_main+1)^0,c
  1327   000BE4  5012               	movf	??_main^0,w,c
  1328   000BE6  5E13               	subwf	(??_main+1)^0,f,c
  1329   000BE8  3A13               	swapf	(??_main+1)^0,f,c
  1330   000BEA  50BD               	movf	189,w,c	;volatile
  1331   000BEC  1813               	xorwf	(??_main+1)^0,w,c
  1332   000BEE  0BCF               	andlw	-49
  1333   000BF0  1813               	xorwf	(??_main+1)^0,w,c
  1334   000BF2  6EBD               	movwf	189,c	;volatile
  1335   000BF4  EFFF  F005         	goto	l1661
  1336   000BF8                     l1657:
  1337                           
  1338                           ;main.c: 168:                     {;main.c: 169:                         CCPR1L--;
  1339   000BF8  06BE               	decf	190,f,c	;volatile
  1340   000BFA                     
  1341                           ;main.c: 170:                         CCP1CONbits.DC1B = 0b11;
  1342   000BFA  0E30               	movlw	48
  1343   000BFC  12BD               	iorwf	189,f,c	;volatile
  1344   000BFE                     l1661:
  1345                           
  1346                           ;main.c: 172:                     _delay((unsigned long)((100)*(125000/4000.0)));
  1347   000BFE  0E05               	movlw	5
  1348   000C00  6E12               	movwf	??_main^0,c
  1349   000C02  0E0D               	movlw	13
  1350   000C04                     u1177:
  1351   000C04  2EE8               	decfsz	wreg,f,c
  1352   000C06  D7FE               	bra	u1177
  1353   000C08  2E12               	decfsz	??_main^0,f,c
  1354   000C0A  D7FC               	bra	u1177
  1355   000C0C  D000               	nop2	
  1356   000C0E  EF57  F005         	goto	l1603
  1357   000C12  EF36  F000         	goto	start
  1358   000C16                     __end_of_main:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _UART_Write_Text *****************
  1362 ;; Defined at:
  1363 ;;		line 46 in file "setting_hardaware/uart.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  text            1   13[COMRAM] PTR unsigned char 
  1366 ;;		 -> STR_4(16), STR_3(12), STR_2(8), STR_1(7), 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  i               2   15[COMRAM] int 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1378 ;;      Params:         1       0       0       0       0       0       0
  1379 ;;      Locals:         2       0       0       0       0       0       0
  1380 ;;      Temps:          1       0       0       0       0       0       0
  1381 ;;      Totals:         4       0       0       0       0       0       0
  1382 ;;Total ram usage:        4 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 5
  1385 ;; This function calls:
  1386 ;;		_UART_Write
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text1
  1393   000D26                     __ptext1:
  1394                           	callstack 0
  1395   000D26                     _UART_Write_Text:
  1396                           	callstack 25
  1397   000D26                     
  1398                           ;setting_hardaware/uart.c: 47:     for(int i=0;text[i]!='\0';i++)
  1399   000D26  0E00               	movlw	0
  1400   000D28  6E11               	movwf	(UART_Write_Text@i+1)^0,c
  1401   000D2A  0E00               	movlw	0
  1402   000D2C  6E10               	movwf	UART_Write_Text@i^0,c
  1403   000D2E  EFA4  F006         	goto	l1379
  1404   000D32                     l1375:
  1405                           
  1406                           ;setting_hardaware/uart.c: 48:         UART_Write(text[i]);
  1407   000D32  500E               	movf	UART_Write_Text@text^0,w,c
  1408   000D34  2410               	addwf	UART_Write_Text@i^0,w,c
  1409   000D36  6E0F               	movwf	??_UART_Write_Text^0,c
  1410   000D38  C00F  FFF6         	movff	??_UART_Write_Text,tblptrl
  1411   000D3C                     	if	0	;There is only one active tblptr byte
  1412   000D3C                     	endif
  1413   000D3C                     	if	0	;tblptru may be non-zero
  1414   000D3C                     	endif
  1415   000D3C                     	if	0	;tblptru may be non-zero
  1416   000D3C                     	endif
  1417   000D3C  0008               	tblrd		*
  1418   000D3E  50F5               	movf	tablat,w,c
  1419   000D40  ECF7  F006         	call	_UART_Write
  1420   000D44  4A10               	infsnz	UART_Write_Text@i^0,f,c
  1421   000D46  2A11               	incf	(UART_Write_Text@i+1)^0,f,c
  1422   000D48                     l1379:
  1423   000D48  500E               	movf	UART_Write_Text@text^0,w,c
  1424   000D4A  2410               	addwf	UART_Write_Text@i^0,w,c
  1425   000D4C  6E0F               	movwf	??_UART_Write_Text^0,c
  1426   000D4E  C00F  FFF6         	movff	??_UART_Write_Text,tblptrl
  1427   000D52                     	if	0	;There is only one active tblptr byte
  1428   000D52                     	endif
  1429   000D52                     	if	0	;tblptru may be non-zero
  1430   000D52                     	endif
  1431   000D52                     	if	0	;tblptru may be non-zero
  1432   000D52                     	endif
  1433   000D52  0008               	tblrd		*
  1434   000D54  50F5               	movf	tablat,w,c
  1435   000D56  0900               	iorlw	0
  1436   000D58  A4D8               	btfss	status,2,c
  1437   000D5A  EFB1  F006         	goto	u641
  1438   000D5E  EFB3  F006         	goto	u640
  1439   000D62                     u641:
  1440   000D62  EF99  F006         	goto	l1375
  1441   000D66                     u640:
  1442   000D66  0012               	return		;funcret
  1443   000D68                     __end_of_UART_Write_Text:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function _UART_Write *****************
  1447 ;; Defined at:
  1448 ;;		line 39 in file "setting_hardaware/uart.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  data            1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  data            1   12[COMRAM] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1462 ;;      Params:         0       0       0       0       0       0       0
  1463 ;;      Locals:         1       0       0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0
  1465 ;;      Totals:         1       0       0       0       0       0       0
  1466 ;;Total ram usage:        1 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 4
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_UART_Write_Text
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text2
  1477   000DEE                     __ptext2:
  1478                           	callstack 0
  1479   000DEE                     _UART_Write:
  1480                           	callstack 25
  1481                           
  1482                           ;incstack = 0
  1483                           ;UART_Write@data stored from wreg
  1484   000DEE  6E0D               	movwf	UART_Write@data^0,c
  1485   000DF0                     l214:
  1486   000DF0  A2AC               	btfss	172,1,c	;volatile
  1487   000DF2  EFFD  F006         	goto	u11
  1488   000DF6  EFFF  F006         	goto	u10
  1489   000DFA                     u11:
  1490   000DFA  EFF8  F006         	goto	l214
  1491   000DFE                     u10:
  1492   000DFE                     
  1493                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  1494   000DFE  C00D  FFAD         	movff	UART_Write@data,4013	;volatile
  1495   000E02  0012               	return		;funcret
  1496   000E04                     __end_of_UART_Write:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function _SYSTEM_Initialize *****************
  1500 ;; Defined at:
  1501 ;;		line 60 in file "setting_hardaware/setting.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1515 ;;      Params:         0       0       0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0
  1518 ;;      Totals:         0       0       0       0       0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 5
  1522 ;; This function calls:
  1523 ;;		_ADC_Initialize
  1524 ;;		_CCP1_Initialize
  1525 ;;		_INTERRUPT_Initialize
  1526 ;;		_OSCILLATOR_Initialize
  1527 ;;		_UART_Initialize
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text3
  1534   000E04                     __ptext3:
  1535                           	callstack 0
  1536   000E04                     _SYSTEM_Initialize:
  1537                           	callstack 25
  1538   000E04                     
  1539                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1540   000E04  EC28  F007         	call	_OSCILLATOR_Initialize	;wreg free
  1541                           
  1542                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1543   000E08  EC2C  F007         	call	_INTERRUPT_Initialize	;wreg free
  1544   000E0C                     
  1545                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1546   000E0C  ECE6  F006         	call	_UART_Initialize	;wreg free
  1547   000E10                     
  1548                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  1549   000E10  ECD3  F006         	call	_CCP1_Initialize	;wreg free
  1550   000E14                     
  1551                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  1552   000E14  EC0D  F007         	call	_ADC_Initialize	;wreg free
  1553   000E18  0012               	return		;funcret
  1554   000E1A                     __end_of_SYSTEM_Initialize:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _UART_Initialize *****************
  1558 ;; Defined at:
  1559 ;;		line 7 in file "setting_hardaware/uart.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1573 ;;      Params:         0       0       0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0
  1576 ;;      Totals:         0       0       0       0       0       0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 4
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_SYSTEM_Initialize
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text4
  1588   000DCC                     __ptext4:
  1589                           	callstack 0
  1590   000DCC                     _UART_Initialize:
  1591                           	callstack 25
  1592   000DCC                     
  1593                           ;setting_hardaware/uart.c: 17:     TRISCbits.TRISC6 = 1;
  1594   000DCC  8C94               	bsf	148,6,c	;volatile
  1595                           
  1596                           ;setting_hardaware/uart.c: 18:     TRISCbits.TRISC7 = 1;
  1597   000DCE  8E94               	bsf	148,7,c	;volatile
  1598                           
  1599                           ;setting_hardaware/uart.c: 21:     TXSTAbits.SYNC = 0;
  1600   000DD0  98AC               	bcf	172,4,c	;volatile
  1601                           
  1602                           ;setting_hardaware/uart.c: 22:     BAUDCONbits.BRG16 = 0;
  1603   000DD2  96B8               	bcf	184,3,c	;volatile
  1604                           
  1605                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 1;
  1606   000DD4  84AC               	bsf	172,2,c	;volatile
  1607   000DD6                     
  1608                           ;setting_hardaware/uart.c: 24:     SPBRG = 25;
  1609   000DD6  0E19               	movlw	25
  1610   000DD8  6EAF               	movwf	175,c	;volatile
  1611   000DDA                     
  1612                           ;setting_hardaware/uart.c: 28:     RCSTAbits.SPEN = 1;
  1613   000DDA  8EAB               	bsf	171,7,c	;volatile
  1614   000DDC                     
  1615                           ;setting_hardaware/uart.c: 29:     PIR1bits.TXIF = 1;
  1616   000DDC  889E               	bsf	158,4,c	;volatile
  1617   000DDE                     
  1618                           ;setting_hardaware/uart.c: 30:     PIR1bits.RCIF = 0;
  1619   000DDE  9A9E               	bcf	158,5,c	;volatile
  1620   000DE0                     
  1621                           ;setting_hardaware/uart.c: 31:     TXSTAbits.TXEN = 1;
  1622   000DE0  8AAC               	bsf	172,5,c	;volatile
  1623   000DE2                     
  1624                           ;setting_hardaware/uart.c: 32:     RCSTAbits.CREN = 1;
  1625   000DE2  88AB               	bsf	171,4,c	;volatile
  1626   000DE4                     
  1627                           ;setting_hardaware/uart.c: 33:     PIE1bits.TXIE = 0;
  1628   000DE4  989D               	bcf	157,4,c	;volatile
  1629   000DE6                     
  1630                           ;setting_hardaware/uart.c: 34:     IPR1bits.TXIP = 0;
  1631   000DE6  989F               	bcf	159,4,c	;volatile
  1632   000DE8                     
  1633                           ;setting_hardaware/uart.c: 35:     PIE1bits.RCIE = 1;
  1634   000DE8  8A9D               	bsf	157,5,c	;volatile
  1635   000DEA                     
  1636                           ;setting_hardaware/uart.c: 36:     IPR1bits.RCIP = 0;
  1637   000DEA  9A9F               	bcf	159,5,c	;volatile
  1638   000DEC  0012               	return		;funcret
  1639   000DEE                     __end_of_UART_Initialize:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _OSCILLATOR_Initialize *****************
  1643 ;; Defined at:
  1644 ;;		line 73 in file "setting_hardaware/setting.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		None
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1658 ;;      Params:         0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; Hardware stack levels required when called: 4
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_SYSTEM_Initialize
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text5
  1673   000E50                     __ptext5:
  1674                           	callstack 0
  1675   000E50                     _OSCILLATOR_Initialize:
  1676                           	callstack 25
  1677   000E50                     
  1678                           ;setting_hardaware/setting.c: 75:     IRCF2 = 0;
  1679   000E50  9CD3               	bcf	4051,6,c	;volatile
  1680                           
  1681                           ;setting_hardaware/setting.c: 76:     IRCF1 = 0;
  1682   000E52  9AD3               	bcf	4051,5,c	;volatile
  1683                           
  1684                           ;setting_hardaware/setting.c: 77:     IRCF0 = 1;
  1685   000E54  88D3               	bsf	4051,4,c	;volatile
  1686   000E56  0012               	return		;funcret
  1687   000E58                     __end_of_OSCILLATOR_Initialize:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _INTERRUPT_Initialize *****************
  1691 ;; Defined at:
  1692 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		None
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1706 ;;      Params:         0       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0
  1709 ;;      Totals:         0       0       0       0       0       0       0
  1710 ;;Total ram usage:        0 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; Hardware stack levels required when called: 4
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_SYSTEM_Initialize
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text6
  1721   000E58                     __ptext6:
  1722                           	callstack 0
  1723   000E58                     _INTERRUPT_Initialize:
  1724                           	callstack 25
  1725   000E58                     
  1726                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1727   000E58  8ED0               	bsf	208,7,c	;volatile
  1728                           
  1729                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1730   000E5A  8EF2               	bsf	242,7,c	;volatile
  1731                           
  1732                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1733   000E5C  8CF2               	bsf	242,6,c	;volatile
  1734   000E5E  0012               	return		;funcret
  1735   000E60                     __end_of_INTERRUPT_Initialize:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _CCP1_Initialize *****************
  1739 ;; Defined at:
  1740 ;;		line 3 in file "setting_hardaware/ccp1.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1754 ;;      Params:         0       0       0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 4
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_SYSTEM_Initialize
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text7
  1769   000DA6                     __ptext7:
  1770                           	callstack 0
  1771   000DA6                     _CCP1_Initialize:
  1772                           	callstack 25
  1773   000DA6                     
  1774                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
  1775   000DA6  9494               	bcf	148,2,c	;volatile
  1776                           
  1777                           ;setting_hardaware/ccp1.c: 8:     T2CONbits.TMR2ON = 0b1;
  1778   000DA8  84CA               	bsf	202,2,c	;volatile
  1779   000DAA                     
  1780                           ;setting_hardaware/ccp1.c: 9:     T2CONbits.T2CKPS = 0b01;
  1781   000DAA  50CA               	movf	202,w,c	;volatile
  1782   000DAC  0BFC               	andlw	-4
  1783   000DAE  0901               	iorlw	1
  1784   000DB0  6ECA               	movwf	202,c	;volatile
  1785                           
  1786                           ;setting_hardaware/ccp1.c: 10:     CCP1CONbits.CCP1M = 0b1100;
  1787   000DB2  50BD               	movf	189,w,c	;volatile
  1788   000DB4  0BF0               	andlw	-16
  1789   000DB6  090C               	iorlw	12
  1790   000DB8  6EBD               	movwf	189,c	;volatile
  1791                           
  1792                           ;setting_hardaware/ccp1.c: 12:     LATC = 0;
  1793   000DBA  0E00               	movlw	0
  1794   000DBC  6E8B               	movwf	139,c	;volatile
  1795                           
  1796                           ;setting_hardaware/ccp1.c: 13:     PR2 = 0x9b;
  1797   000DBE  0E9B               	movlw	155
  1798   000DC0  6ECB               	movwf	203,c	;volatile
  1799                           
  1800                           ;setting_hardaware/ccp1.c: 14:     CCPR1L = 0X0B;
  1801   000DC2  0E0B               	movlw	11
  1802   000DC4  6EBE               	movwf	190,c	;volatile
  1803                           
  1804                           ;setting_hardaware/ccp1.c: 15:     CCP1CONbits.DC1B = 0b11;
  1805   000DC6  0E30               	movlw	48
  1806   000DC8  12BD               	iorwf	189,f,c	;volatile
  1807   000DCA  0012               	return		;funcret
  1808   000DCC                     __end_of_CCP1_Initialize:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _ADC_Initialize *****************
  1812 ;; Defined at:
  1813 ;;		line 3 in file "setting_hardaware/adc.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 4
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_SYSTEM_Initialize
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text8
  1842   000E1A                     __ptext8:
  1843                           	callstack 0
  1844   000E1A                     _ADC_Initialize:
  1845                           	callstack 25
  1846   000E1A                     
  1847                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  1848   000E1A  6892               	setf	146,c	;volatile
  1849   000E1C                     
  1850                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  1851   000E1C  0E0E               	movlw	14
  1852   000E1E  6EC1               	movwf	193,c	;volatile
  1853   000E20                     
  1854                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  1855   000E20  8EC0               	bsf	4032,7,c	;volatile
  1856                           
  1857                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  1858   000E22  0E07               	movlw	7
  1859   000E24  12C0               	iorwf	192,f,c	;volatile
  1860                           
  1861                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  1862   000E26  0E00               	movlw	0
  1863   000E28  6EC4               	movwf	196,c	;volatile
  1864                           
  1865                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  1866   000E2A  0E00               	movlw	0
  1867   000E2C  6EC3               	movwf	195,c	;volatile
  1868   000E2E  0012               	return		;funcret
  1869   000E30                     __end_of_ADC_Initialize:
  1870                           	callstack 0
  1871                           
  1872 ;; *************** function _Lo_ISR *****************
  1873 ;; Defined at:
  1874 ;;		line 81 in file "setting_hardaware/uart.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1888 ;;      Params:         0       0       0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0       0       0
  1890 ;;      Temps:          5       0       0       0       0       0       0
  1891 ;;      Totals:         5       0       0       0       0       0       0
  1892 ;;Total ram usage:        5 bytes
  1893 ;; Hardware stack levels used: 1
  1894 ;; Hardware stack levels required when called: 3
  1895 ;; This function calls:
  1896 ;;		_MyusartRead
  1897 ;; This function is called by:
  1898 ;;		Interrupt level 1
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	intcodelo
  1903   000018                     __pintcodelo:
  1904                           	callstack 0
  1905   000018                     _Lo_ISR:
  1906                           	callstack 25
  1907                           
  1908                           ;incstack = 0
  1909   000018  8062               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1910   00001A  CFD8 F008          	movff	status,??_Lo_ISR
  1911   00001E  CFE8 F009          	movff	wreg,??_Lo_ISR+1
  1912   000022  CFE0 F00A          	movff	bsr,??_Lo_ISR+2
  1913   000026  CFD9 F00B          	movff	fsr2l,??_Lo_ISR+3
  1914   00002A  CFDA F00C          	movff	fsr2h,??_Lo_ISR+4
  1915   00002E                     
  1916                           ;setting_hardaware/uart.c: 83:     if(RCIF)
  1917   00002E  AA9E               	btfss	3998,5,c	;volatile
  1918   000030  EF1C  F000         	goto	i1u108_21
  1919   000034  EF1E  F000         	goto	i1u108_20
  1920   000038                     i1u108_21:
  1921   000038  EF2A  F000         	goto	i1l243
  1922   00003C                     i1u108_20:
  1923   00003C                     
  1924                           ;setting_hardaware/uart.c: 84:     {;setting_hardaware/uart.c: 85:         if(RCSTAbits.
      +                          OERR)
  1925   00003C  A2AB               	btfss	171,1,c	;volatile
  1926   00003E  EF23  F000         	goto	i1u109_21
  1927   000042  EF25  F000         	goto	i1u109_20
  1928   000046                     i1u109_21:
  1929   000046  EF28  F000         	goto	i1l1669
  1930   00004A                     i1u109_20:
  1931   00004A                     
  1932                           ;setting_hardaware/uart.c: 86:         {;setting_hardaware/uart.c: 87:             CREN 
      +                          = 0;
  1933   00004A  98AB               	bcf	4011,4,c	;volatile
  1934                           
  1935                           ;setting_hardaware/uart.c: 88:             __nop();
  1936   00004C  0000               	nop	
  1937                           
  1938                           ;setting_hardaware/uart.c: 89:             CREN = 1;
  1939   00004E  88AB               	bsf	4011,4,c	;volatile
  1940   000050                     i1l1669:
  1941                           
  1942                           ;setting_hardaware/uart.c: 92:         MyusartRead();
  1943   000050  EC63  F006         	call	_MyusartRead	;wreg free
  1944   000054                     i1l243:
  1945   000054  C00C  FFDA         	movff	??_Lo_ISR+4,fsr2h
  1946   000058  C00B  FFD9         	movff	??_Lo_ISR+3,fsr2l
  1947   00005C  C00A  FFE0         	movff	??_Lo_ISR+2,bsr
  1948   000060  C009  FFE8         	movff	??_Lo_ISR+1,wreg
  1949   000064  C008  FFD8         	movff	??_Lo_ISR,status
  1950   000068  9062               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1951   00006A  0010               	retfie	
  1952   00006C                     __end_of_Lo_ISR:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _MyusartRead *****************
  1956 ;; Defined at:
  1957 ;;		line 57 in file "setting_hardaware/uart.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1971 ;;      Params:         0       0       0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0
  1973 ;;      Temps:          1       0       0       0       0       0       0
  1974 ;;      Totals:         1       0       0       0       0       0       0
  1975 ;;Total ram usage:        1 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 2
  1978 ;; This function calls:
  1979 ;;		___awmod
  1980 ;;		i1_UART_Write
  1981 ;; This function is called by:
  1982 ;;		_Lo_ISR
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text10
  1987   000CC6                     __ptext10:
  1988                           	callstack 0
  1989   000CC6                     _MyusartRead:
  1990                           	callstack 25
  1991   000CC6                     
  1992                           ;setting_hardaware/uart.c: 60:     mystring[lenStr] = RCREG;
  1993   000CC6  5042               	movf	_lenStr^0,w,c
  1994   000CC8  0F44               	addlw	low _mystring
  1995   000CCA  6ED9               	movwf	fsr2l,c
  1996   000CCC  6ADA               	clrf	fsr2h,c
  1997   000CCE  CFAE FFDF          	movff	4014,indf2	;volatile
  1998   000CD2                     
  1999                           ;setting_hardaware/uart.c: 61:     UART_Write(mystring[lenStr]);
  2000   000CD2  5042               	movf	_lenStr^0,w,c
  2001   000CD4  0F44               	addlw	low _mystring
  2002   000CD6  6ED9               	movwf	fsr2l,c
  2003   000CD8  6ADA               	clrf	fsr2h,c
  2004   000CDA  50DF               	movf	indf2,w,c
  2005   000CDC  EC18  F007         	call	i1_UART_Write
  2006   000CE0                     
  2007                           ;setting_hardaware/uart.c: 62:     if (mystring[lenStr] == '\r')
  2008   000CE0  5042               	movf	_lenStr^0,w,c
  2009   000CE2  0F44               	addlw	low _mystring
  2010   000CE4  6ED9               	movwf	fsr2l,c
  2011   000CE6  6ADA               	clrf	fsr2h,c
  2012   000CE8  0E0D               	movlw	13
  2013   000CEA  18DE               	xorwf	postinc2,w,c
  2014   000CEC  A4D8               	btfss	status,2,c
  2015   000CEE  EF7B  F006         	goto	i1u65_21
  2016   000CF2  EF7D  F006         	goto	i1u65_20
  2017   000CF6                     i1u65_21:
  2018   000CF6  EF82  F006         	goto	i1l1389
  2019   000CFA                     i1u65_20:
  2020   000CFA                     
  2021                           ;setting_hardaware/uart.c: 63:     {;setting_hardaware/uart.c: 64:         UART_Write('\
      +                          n');
  2022   000CFA  0E0A               	movlw	10
  2023   000CFC  EC18  F007         	call	i1_UART_Write
  2024                           
  2025                           ;setting_hardaware/uart.c: 66:     }
  2026   000D00  EF92  F006         	goto	i1l233
  2027   000D04                     i1l1389:
  2028                           
  2029                           ;setting_hardaware/uart.c: 68:     {;setting_hardaware/uart.c: 69:         lenStr++;
  2030   000D04  4A42               	infsnz	_lenStr^0,f,c
  2031   000D06  2A43               	incf	(_lenStr+1)^0,f,c
  2032   000D08                     
  2033                           ;setting_hardaware/uart.c: 70:         lenStr %= 10;
  2034   000D08  C042  F001         	movff	_lenStr,___awmod@dividend
  2035   000D0C  C043  F002         	movff	_lenStr+1,___awmod@dividend+1
  2036   000D10  0E00               	movlw	0
  2037   000D12  6E04               	movwf	(___awmod@divisor+1)^0,c
  2038   000D14  0E0A               	movlw	10
  2039   000D16  6E03               	movwf	___awmod@divisor^0,c
  2040   000D18  EC0B  F006         	call	___awmod	;wreg free
  2041   000D1C  C001  F042         	movff	?___awmod,_lenStr
  2042   000D20  C002  F043         	movff	?___awmod+1,_lenStr+1
  2043   000D24                     i1l233:
  2044   000D24  0012               	return		;funcret
  2045   000D26                     __end_of_MyusartRead:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function i1_UART_Write *****************
  2049 ;; Defined at:
  2050 ;;		line 39 in file "setting_hardaware/uart.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  data            1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  data            1    0[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2064 ;;      Params:         0       0       0       0       0       0       0
  2065 ;;      Locals:         1       0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0
  2067 ;;      Totals:         1       0       0       0       0       0       0
  2068 ;;Total ram usage:        1 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 1
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_MyusartRead
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text11
  2079   000E30                     __ptext11:
  2080                           	callstack 0
  2081   000E30                     i1_UART_Write:
  2082                           	callstack 25
  2083                           
  2084                           ;incstack = 0
  2085                           ;i1UART_Write@data stored from wreg
  2086   000E30  6E01               	movwf	i1UART_Write@data^0,c
  2087   000E32                     i1l214:
  2088   000E32  A2AC               	btfss	172,1,c	;volatile
  2089   000E34  EF1E  F007         	goto	i1u63_21
  2090   000E38  EF20  F007         	goto	i1u63_20
  2091   000E3C                     i1u63_21:
  2092   000E3C  EF19  F007         	goto	i1l214
  2093   000E40                     i1u63_20:
  2094   000E40                     
  2095                           ;setting_hardaware/uart.c: 42:     TXREG = data;
  2096   000E40  C001  FFAD         	movff	i1UART_Write@data,4013	;volatile
  2097   000E44  0012               	return		;funcret
  2098   000E46                     __end_ofi1_UART_Write:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function ___awmod *****************
  2102 ;; Defined at:
  2103 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  dividend        2    0[COMRAM] int 
  2106 ;;  divisor         2    2[COMRAM] int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  sign            1    5[COMRAM] unsigned char 
  2109 ;;  counter         1    4[COMRAM] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2    0[COMRAM] int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2119 ;;      Params:         4       0       0       0       0       0       0
  2120 ;;      Locals:         2       0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0
  2122 ;;      Totals:         6       0       0       0       0       0       0
  2123 ;;Total ram usage:        6 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_MyusartRead
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text12
  2134   000C16                     __ptext12:
  2135                           	callstack 0
  2136   000C16                     ___awmod:
  2137                           	callstack 25
  2138   000C16  0E00               	movlw	0
  2139   000C18  6E06               	movwf	___awmod@sign^0,c
  2140   000C1A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2141   000C1C  EF14  F006         	goto	i1u57_20
  2142   000C20  EF12  F006         	goto	i1u57_21
  2143   000C24                     i1u57_21:
  2144   000C24  EF1A  F006         	goto	i1l1341
  2145   000C28                     i1u57_20:
  2146   000C28  6C01               	negf	___awmod@dividend^0,c
  2147   000C2A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2148   000C2C  B0D8               	btfsc	status,0,c
  2149   000C2E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2150   000C30  0E01               	movlw	1
  2151   000C32  6E06               	movwf	___awmod@sign^0,c
  2152   000C34                     i1l1341:
  2153   000C34  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2154   000C36  EF21  F006         	goto	i1u58_20
  2155   000C3A  EF1F  F006         	goto	i1u58_21
  2156   000C3E                     i1u58_21:
  2157   000C3E  EF25  F006         	goto	i1l1345
  2158   000C42                     i1u58_20:
  2159   000C42  6C03               	negf	___awmod@divisor^0,c
  2160   000C44  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2161   000C46  B0D8               	btfsc	status,0,c
  2162   000C48  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2163   000C4A                     i1l1345:
  2164   000C4A  5003               	movf	___awmod@divisor^0,w,c
  2165   000C4C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2166   000C4E  B4D8               	btfsc	status,2,c
  2167   000C50  EF2C  F006         	goto	i1u59_21
  2168   000C54  EF2E  F006         	goto	i1u59_20
  2169   000C58                     i1u59_21:
  2170   000C58  EF52  F006         	goto	i1l1361
  2171   000C5C                     i1u59_20:
  2172   000C5C  0E01               	movlw	1
  2173   000C5E  6E05               	movwf	___awmod@counter^0,c
  2174   000C60  EF36  F006         	goto	i1l1351
  2175   000C64                     i1l1349:
  2176   000C64  90D8               	bcf	status,0,c
  2177   000C66  3603               	rlcf	___awmod@divisor^0,f,c
  2178   000C68  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2179   000C6A  2A05               	incf	___awmod@counter^0,f,c
  2180   000C6C                     i1l1351:
  2181   000C6C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2182   000C6E  EF3B  F006         	goto	i1u60_21
  2183   000C72  EF3D  F006         	goto	i1u60_20
  2184   000C76                     i1u60_21:
  2185   000C76  EF32  F006         	goto	i1l1349
  2186   000C7A                     i1u60_20:
  2187   000C7A                     i1l1353:
  2188   000C7A  5003               	movf	___awmod@divisor^0,w,c
  2189   000C7C  5C01               	subwf	___awmod@dividend^0,w,c
  2190   000C7E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2191   000C80  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2192   000C82  A0D8               	btfss	status,0,c
  2193   000C84  EF46  F006         	goto	i1u61_21
  2194   000C88  EF48  F006         	goto	i1u61_20
  2195   000C8C                     i1u61_21:
  2196   000C8C  EF4C  F006         	goto	i1l1357
  2197   000C90                     i1u61_20:
  2198   000C90  5003               	movf	___awmod@divisor^0,w,c
  2199   000C92  5E01               	subwf	___awmod@dividend^0,f,c
  2200   000C94  5004               	movf	(___awmod@divisor+1)^0,w,c
  2201   000C96  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2202   000C98                     i1l1357:
  2203   000C98  90D8               	bcf	status,0,c
  2204   000C9A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2205   000C9C  3203               	rrcf	___awmod@divisor^0,f,c
  2206   000C9E  2E05               	decfsz	___awmod@counter^0,f,c
  2207   000CA0  EF3D  F006         	goto	i1l1353
  2208   000CA4                     i1l1361:
  2209   000CA4  5006               	movf	___awmod@sign^0,w,c
  2210   000CA6  B4D8               	btfsc	status,2,c
  2211   000CA8  EF58  F006         	goto	i1u62_21
  2212   000CAC  EF5A  F006         	goto	i1u62_20
  2213   000CB0                     i1u62_21:
  2214   000CB0  EF5E  F006         	goto	i1l1365
  2215   000CB4                     i1u62_20:
  2216   000CB4  6C01               	negf	___awmod@dividend^0,c
  2217   000CB6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2218   000CB8  B0D8               	btfsc	status,0,c
  2219   000CBA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2220   000CBC                     i1l1365:
  2221   000CBC  C001  F001         	movff	___awmod@dividend,?___awmod
  2222   000CC0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2223   000CC4  0012               	return		;funcret
  2224   000CC6                     __end_of___awmod:
  2225                           	callstack 0
  2226                           
  2227 ;; *************** function _Hi_ISR *****************
  2228 ;; Defined at:
  2229 ;;		line 181 in file "main.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		None
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2243 ;;      Params:         0       0       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		Interrupt level 2
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	intcode
  2257   000008                     __pintcode:
  2258                           	callstack 0
  2259   000008                     _Hi_ISR:
  2260                           	callstack 25
  2261                           
  2262                           ;incstack = 0
  2263   000008  8262               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2264   00000A  ED30  F007         	call	int_func,f	;refresh shadow registers
  2265                           
  2266                           	psect	intcode_body
  2267   000E60                     __pintcode_body:
  2268                           	callstack 25
  2269   000E60                     int_func:
  2270                           	callstack 25
  2271   000E60  0006               	pop		; remove dummy address from shadow register refresh
  2272   000E62  9262               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2273   000E64  0011               	retfie		f
  2274   000E66                     __end_of_Hi_ISR:
  2275                           	callstack 0
  2276                           
  2277                           	psect	rparam
  2278   000000                     
  2279                           	psect	temp
  2280   000062                     btemp:
  2281                           	callstack 0
  2282   000062                     	ds	1
  2283   000000                     int$flags	set	btemp
  2284   000000                     wtemp8	set	btemp+1
  2285   000000                     ttemp5	set	btemp+1
  2286   000000                     ttemp6	set	btemp+4
  2287   000000                     ttemp7	set	btemp+8
  2288                           
  2289                           	psect	idloc
  2290                           
  2291                           ;Config register IDLOC0 @ 0x200000
  2292                           ;	unspecified, using default values
  2293   200000                     	org	2097152
  2294   200000  FF                 	db	255
  2295                           
  2296                           ;Config register IDLOC1 @ 0x200001
  2297                           ;	unspecified, using default values
  2298   200001                     	org	2097153
  2299   200001  FF                 	db	255
  2300                           
  2301                           ;Config register IDLOC2 @ 0x200002
  2302                           ;	unspecified, using default values
  2303   200002                     	org	2097154
  2304   200002  FF                 	db	255
  2305                           
  2306                           ;Config register IDLOC3 @ 0x200003
  2307                           ;	unspecified, using default values
  2308   200003                     	org	2097155
  2309   200003  FF                 	db	255
  2310                           
  2311                           ;Config register IDLOC4 @ 0x200004
  2312                           ;	unspecified, using default values
  2313   200004                     	org	2097156
  2314   200004  FF                 	db	255
  2315                           
  2316                           ;Config register IDLOC5 @ 0x200005
  2317                           ;	unspecified, using default values
  2318   200005                     	org	2097157
  2319   200005  FF                 	db	255
  2320                           
  2321                           ;Config register IDLOC6 @ 0x200006
  2322                           ;	unspecified, using default values
  2323   200006                     	org	2097158
  2324   200006  FF                 	db	255
  2325                           
  2326                           ;Config register IDLOC7 @ 0x200007
  2327                           ;	unspecified, using default values
  2328   200007                     	org	2097159
  2329   200007  FF                 	db	255
  2330                           
  2331                           	psect	config
  2332                           
  2333                           ; Padding undefined space
  2334   300000                     	org	3145728
  2335   300000  FF                 	db	255
  2336                           
  2337                           ;Config register CONFIG1H @ 0x300001
  2338                           ;	Oscillator Selection bits
  2339                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2340                           ;	Fail-Safe Clock Monitor Enable bit
  2341                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2342                           ;	Internal/External Oscillator Switchover bit
  2343                           ;	IESO = ON, Oscillator Switchover mode enabled
  2344   300001                     	org	3145729
  2345   300001  88                 	db	136
  2346                           
  2347                           ;Config register CONFIG2L @ 0x300002
  2348                           ;	Power-up Timer Enable bit
  2349                           ;	PWRT = OFF, PWRT disabled
  2350                           ;	Brown-out Reset Enable bits
  2351                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2352                           ;	Brown Out Reset Voltage bits
  2353                           ;	BORV = 3, Minimum setting
  2354   300002                     	org	3145730
  2355   300002  1F                 	db	31
  2356                           
  2357                           ;Config register CONFIG2H @ 0x300003
  2358                           ;	Watchdog Timer Enable bit
  2359                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2360                           ;	Watchdog Timer Postscale Select bits
  2361                           ;	WDTPS = 1, 1:1
  2362   300003                     	org	3145731
  2363   300003  00                 	db	0
  2364                           
  2365                           ; Padding undefined space
  2366   300004                     	org	3145732
  2367   300004  FF                 	db	255
  2368                           
  2369                           ;Config register CONFIG3H @ 0x300005
  2370                           ;	CCP2 MUX bit
  2371                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2372                           ;	PORTB A/D Enable bit
  2373                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2374                           ;	Low-Power Timer1 Oscillator Enable bit
  2375                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2376                           ;	MCLR Pin Enable bit
  2377                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2378   300005                     	org	3145733
  2379   300005  83                 	db	131
  2380                           
  2381                           ;Config register CONFIG4L @ 0x300006
  2382                           ;	Stack Full/Underflow Reset Enable bit
  2383                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2384                           ;	Single-Supply ICSP Enable bit
  2385                           ;	LVP = OFF, Single-Supply ICSP disabled
  2386                           ;	Extended Instruction Set Enable bit
  2387                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2388                           ;	Background Debugger Enable bit
  2389                           ;	DEBUG = 0x1, unprogrammed default
  2390   300006                     	org	3145734
  2391   300006  81                 	db	129
  2392                           
  2393                           ; Padding undefined space
  2394   300007                     	org	3145735
  2395   300007  FF                 	db	255
  2396                           
  2397                           ;Config register CONFIG5L @ 0x300008
  2398                           ;	Code Protection bit
  2399                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2400                           ;	Code Protection bit
  2401                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2402                           ;	Code Protection bit
  2403                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2404                           ;	Code Protection bit
  2405                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2406   300008                     	org	3145736
  2407   300008  0F                 	db	15
  2408                           
  2409                           ;Config register CONFIG5H @ 0x300009
  2410                           ;	Boot Block Code Protection bit
  2411                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2412                           ;	Data EEPROM Code Protection bit
  2413                           ;	CPD = OFF, Data EEPROM not code-protected
  2414   300009                     	org	3145737
  2415   300009  C0                 	db	192
  2416                           
  2417                           ;Config register CONFIG6L @ 0x30000A
  2418                           ;	Write Protection bit
  2419                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2420                           ;	Write Protection bit
  2421                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2422                           ;	Write Protection bit
  2423                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2424                           ;	Write Protection bit
  2425                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2426   30000A                     	org	3145738
  2427   30000A  0F                 	db	15
  2428                           
  2429                           ;Config register CONFIG6H @ 0x30000B
  2430                           ;	Configuration Register Write Protection bit
  2431                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2432                           ;	Boot Block Write Protection bit
  2433                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2434                           ;	Data EEPROM Write Protection bit
  2435                           ;	WRTD = OFF, Data EEPROM not write-protected
  2436   30000B                     	org	3145739
  2437   30000B  E0                 	db	224
  2438                           
  2439                           ;Config register CONFIG7L @ 0x30000C
  2440                           ;	Table Read Protection bit
  2441                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2442                           ;	Table Read Protection bit
  2443                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2444                           ;	Table Read Protection bit
  2445                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2446                           ;	Table Read Protection bit
  2447                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2448   30000C                     	org	3145740
  2449   30000C  0F                 	db	15
  2450                           
  2451                           ;Config register CONFIG7H @ 0x30000D
  2452                           ;	Boot Block Table Read Protection bit
  2453                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2454   30000D                     	org	3145741
  2455   30000D  40                 	db	64
  2456                           tosu	equ	0xFFF
  2457                           tosh	equ	0xFFE
  2458                           tosl	equ	0xFFD
  2459                           stkptr	equ	0xFFC
  2460                           pclatu	equ	0xFFB
  2461                           pclath	equ	0xFFA
  2462                           pcl	equ	0xFF9
  2463                           tblptru	equ	0xFF8
  2464                           tblptrh	equ	0xFF7
  2465                           tblptrl	equ	0xFF6
  2466                           tablat	equ	0xFF5
  2467                           prodh	equ	0xFF4
  2468                           prodl	equ	0xFF3
  2469                           indf0	equ	0xFEF
  2470                           postinc0	equ	0xFEE
  2471                           postdec0	equ	0xFED
  2472                           preinc0	equ	0xFEC
  2473                           plusw0	equ	0xFEB
  2474                           fsr0h	equ	0xFEA
  2475                           fsr0l	equ	0xFE9
  2476                           wreg	equ	0xFE8
  2477                           indf1	equ	0xFE7
  2478                           postinc1	equ	0xFE6
  2479                           postdec1	equ	0xFE5
  2480                           preinc1	equ	0xFE4
  2481                           plusw1	equ	0xFE3
  2482                           fsr1h	equ	0xFE2
  2483                           fsr1l	equ	0xFE1
  2484                           bsr	equ	0xFE0
  2485                           indf2	equ	0xFDF
  2486                           postinc2	equ	0xFDE
  2487                           postdec2	equ	0xFDD
  2488                           preinc2	equ	0xFDC
  2489                           plusw2	equ	0xFDB
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8

Data Sizes:
    Strings     43
    Constant    0
    Data        10
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     45      97
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[7]), STR_2(CODE[8]), STR_3(CODE[12]), STR_4(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0     970
                                             17 COMRAM    28    28      0
                  _SYSTEM_Initialize
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     3      1     409
                                             13 COMRAM     4     3      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     470
                                              7 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     470
                                              6 COMRAM     1     1      0
                            ___awmod
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (5) i1_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _UART_Write_Text
     _UART_Write

 _Lo_ISR (ROOT)
   _MyusartRead
     ___awmod
     i1_UART_Write

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2D      61       1       77.0%
BITBIGSFR_1llh       B      0       0      26        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1lhlh      8      0       0      25        0.0%
BITBIGSFRlllh        7      0       0      30        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1hhhl      5      0       0      22        0.0%
BITBIGSFRh           5      0       0      27        0.0%
BITBIGSFR_1lhh       4      0       0      24        0.0%
BITBIGSFR_1hhhh      4      0       0      21        0.0%
BITBIGSFRlhl         4      0       0      28        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhhh      2      0       0      20        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFR_1hl        1      0       0      23        0.0%
BITBIGSFRllh         1      0       0      29        0.0%
BITBIGSFRllll        1      0       0      31        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      32        0.0%
DATA                 0      0      61      34        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 28 19:59:55 2023

                           l60 0876                             l45 082A                             l65 09B4  
                           l77 0A76                             u10 0DFE                             u11 0DFA  
                           bsr 0FE0        __end_of_CCP1_Initialize 0DCC                            l211 0DEC  
                          l214 0DF0                            l223 0D66                            l128 0E2E  
                          l217 0E02                            l156 0E5E                            l149 0DCA  
                          l175 0E18                            l178 0E56                            l921 0E1C  
                          l923 0E20                            l931 0E50                            l925 0DA6  
                          l941 0DDE                            l933 0DCC                            l919 0E1A  
                          l927 0DAA                            l951 0DE8                            l943 0DE0  
                          l935 0DD6                            l929 0E58                            l953 0DEA  
                          l945 0DE2                            l937 0DDA                            l947 0DE4  
                          l939 0DDC                            l955 0DF0                            l949 0DE6  
                          l957 0DFE                            l999 0E04                            _PR2 0FCB  
                          u700 06DE                            u701 06DA                            u710 070E  
                          u711 070A                            u640 0D66                            u800 083C  
                          u720 0728                            u641 0D62                            u801 0838  
                          u721 0724                            u810 0850                            u730 075A  
                          u811 084C                            u731 0756                            u900 0964  
                          u820 086E                            u740 0768                            u901 0960  
                          u821 086A                            u741 0764                            u661 0638  
                          u910 097C                            u830 0884                            u750 0798  
                          u670 068E                            u911 0978                            u831 0880  
                          u751 0794                            u671 068A                            u920 09C2  
                          u840 08B2                            u760 07B2                            u680 069E  
                          u921 09BE                            u841 08AE                            u761 07AE  
                          u681 069A                            u930 09F4                            u850 08C6  
                          u770 07E4                            u690 06D0                            u931 09F0  
                          u851 08C2                            u771 07E0                            u691 06CC  
                          u940 0A12                            u860 08D8                            u780 07F2  
                          u941 0A0E                            u861 08D4                            u781 07EE  
                          u950 0A26                            u870 0920                            u790 0822  
                          u951 0A22                            u871 091C                            u791 081E  
                          u960 0A3E                            u880 0932                            u961 0A3A  
                          u881 092E                            u970 0A84                            u890 0950  
                          u971 0A80                            u891 094C                            u980 0AA6  
                          u981 0AA2                            u990 0AE2                            u991 0ADE  
                          _str 002E                   ___awmod@sign 0006                            wreg 0FE8  
                         l1001 0E0C                           l1003 0E10                           l1005 0E14  
                         l1401 064C                           l1411 0664                           l1403 0654  
                         l1501 0854                           l1421 067C                           l1413 0668  
                         l1405 0658                           l1511 0890                           l1503 085C  
                         l1431 06A6                           l1423 068E                           l1415 066C  
                         l1407 065C                           l1601 0AA6                           l1521 08D8  
                         l1505 086E                           l1513 08A0                           l1441 06EE  
                         l1433 06B2                           l1425 069E                           l1417 0670  
                         l1409 0660                           l1603 0AAE                           l1523 08E0  
                         l1515 08B2                           l1507 0884                           l1443 06F4  
                         l1435 06C2                           l1419 0678                           l1373 0D26  
                         l1621 0B06                           l1613 0AC2                           l1605 0AB6  
                         l1541 0924                           l1525 08E8                           l1517 08C6  
                         l1509 088C                           l1461 075A                           l1445 070E  
                         l1437 06D0                           l1375 0D32                           l1623 0B1A  
                         l1615 0AC6                           l1607 0ABA                           l1543 0932  
                         l1535 0900                           l1527 08F0                           l1519 08CA  
                         l1463 0768                           l1455 0730                           l1471 07A0  
                         l1439 06DE                           l1447 0716                           l1377 0D44  
                         l1641 0B72                           l1625 0B22                           l1633 0B3A  
                         l1617 0AE2                           l1561 099C                           l1545 093A  
                         l1537 0904                           l1529 08F8                           l1481 07C6  
                         l1473 07B2                           l1465 0778                           l1457 073C  
                         l1449 0728                           l1379 0D48                           l1635 0B4E  
                         l1627 0B2A                           l1619 0AF4                           l1643 0B82  
                         l1571 09E2                           l1563 09A0                           l1555 0968  
                         l1547 093E                           l1539 0920                           l1491 0808  
                         l1483 07D6                           l1467 077E                           l1459 074C  
                         l1395 062E                           l1661 0BFE                           l1653 0BC6  
                         l1645 0B94                           l1637 0B6C                           l1629 0B32  
                         l1581 0A12                           l1573 09E6                           l1565 09C2  
                         l1557 097C                           l1549 0950                           l1493 0822  
                         l1485 07E4                           l1469 0798                           l1397 0640  
                         l1655 0BDA                           l1647 0BA6                           l1639 0B6E  
                         l1591 0A5C                           l1575 09F4                           l1567 09D2  
                         l1559 099A                           l1487 07F2                           l1479 07BA  
                         l1495 082A                           l1399 0648                           l1657 0BF8  
                         l1649 0BBA                           l1593 0A5E                           l1577 09FC  
                         l1569 09DA                           l1497 083C                           l1489 0802  
                         l1659 0BFA                           l1595 0A62                           l1587 0A2A  
                         l1579 0A00                           l1499 0850                           l1597 0A84  
                         l1589 0A3E                           l1599 0A94                           _ADFM 7E07  
                         STR_1 0625                           STR_2 061D                           STR_3 0611  
                         STR_4 0601                           u1000 0AF4                           _CREN 7D5C  
                         u1001 0AF0                           u1010 0B06                           u1011 0B02  
                         u1020 0B1A                           u1021 0B16                           u1030 0B4E  
                         u1031 0B4A                           u1040 0B94                           u1041 0B90  
                         u1050 0BA6                           u1051 0BA2                           u1107 06B8  
                         u1060 0BBA                           u1061 0BB6                           u1117 0742  
                         u1070 0BDA                           u1071 0BD6                           u1127 07CC  
                         u1137 0896                           u1147 09A6                           u1157 0A68  
                         _LATA 0F89                           u1167 0B78                           _LATC 0F8B  
                         _LATD 0F8C                           u1177 0C04                           _LATE 0F8D  
                         _RCIF 7CF5                           _main 062E                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 0062                           start 006C                   ___param_bank 0000  
      __end_of_UART_Write_Text 0D68               ?_UART_Initialize 0001  __end_of_OSCILLATOR_Initialize 0E58  
                        ?_main 0001                __end_of___awmod 0CC6                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i1l214 0E32  
                        i1l217 0E44                          i1l233 0D24                          i1l243 0054  
                        i2l111 0E62                          i1l490 0CC4                          _RCREG 0FAE  
                        _SPBRG 0FAF                          _PORTB 0F81                          _TRISA 0F92  
                        _TRISB 0F93                          _TRISD 0F95                          _TRISE 0F96  
                        _TXREG 0FAD                    ?_UART_Write 0001                          main@i 0024  
                        tablat 0FF5                          plusw1 0FE3                          plusw2 0FDB  
                        ttemp5 0063                          ttemp6 0066                          ttemp7 006A  
                        status 0FD8                          wtemp8 0063                __initialization 0D68  
                 __end_of_main 0C16                         ??_main 0012               ?_CCP1_Initialize 0001  
                __activetblptr 0001                  main@emergency 002A                         _ADCON1 0FC1  
                       _ADRESH 0FC4                         _ADRESL 0FC3                         _CCPR1L 0FBE  
                       i1l1341 0C34                         i1l1333 0C16                         i1l1351 0C6C  
                       i1l1343 0C42                         i1l1335 0C1A                         i1l1353 0C7A  
                       i1l1361 0CA4                         i1l1345 0C4A                         i1l1337 0C28  
                       i1l1363 0CB4                         i1l1355 0C90                         i1l1347 0C5C  
                       i1l1339 0C30                         i1l1371 0E40                         i1l1365 0CBC  
                       i1l1357 0C98                         i1l1349 0C64                         i1l1381 0CC6  
                       i1l1359 0C9E                         i1l1391 0D08                         i1l1383 0CD2  
                       i1l1369 0E32                         i1l1385 0CE0                         i1l1387 0CFA  
                       i1l1389 0D04                         i1l1663 002E                         i1l1665 003C  
                       i1l1667 004A                         i1l1669 0050                         _Hi_ISR 0008  
                       _Lo_ISR 0018                      ??___awmod 0005               ?_UART_Write_Text 000E  
                       _lenStr 0042                         clear_0 0D8E                ___awmod@divisor 0003  
                       isa$std 0001                ___awmod@counter 0005                   __pdataCOMRAM 0058  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8              _SYSTEM_Initialize 0E04                     __accesstop 0080  
      __end_of__initialization 0D94             ?_SYSTEM_Initialize 0001                  ___rparam_used 0001  
                ?i1_UART_Write 0001                 __pcstackCOMRAM 0001            ??_SYSTEM_Initialize 000D  
                ??_MyusartRead 0007      __end_of_SYSTEM_Initialize 0E1A                        ?_Hi_ISR 0001  
                      ?_Lo_ISR 0001                 ??i1_UART_Write 0001                   ??_UART_Write 000D  
                      i1u60_20 0C7A                        i1u60_21 0C76                        i1u61_20 0C90  
                      i1u61_21 0C8C                        i1u62_20 0CB4                        i1u62_21 0CB0  
                      i1u63_20 0E40                        i1u63_21 0E3C                        i1u57_20 0C28  
                      i1u65_20 0CFA                        i1u57_21 0C24                        i1u65_21 0CF6  
                      i1u58_20 0C42                        i1u58_21 0C3E                        i1u59_20 0C5C  
                      i1u59_21 0C58            __end_of_MyusartRead 0D26                        __Hparam 0000  
                      __Lparam 0000                        ___awmod 0C16             __end_of_UART_Write 0E04  
                 __psmallconst 0600                        __pcinit 0D68                        __ramtop 0600  
                      __ptext0 062E                        __ptext1 0D26                        __ptext2 0DEE  
                      __ptext3 0E04                        __ptext4 0DCC                        __ptext5 0E50  
                      __ptext6 0E58                        __ptext7 0DA6                        __ptext8 0E1A  
        _OSCILLATOR_Initialize 0E50                      _T2CONbits 0FCA               ___awmod@dividend 0001  
               __pintcode_body 0E60           end_of_initialization 0D94                        int_func 0E60  
                    _RCSTAbits 0FAB                        postdec1 0FE5                        postinc0 0FEE  
                      postinc2 0FDE                      _PORTBbits 0F81                 UART_Write@data 000D  
                    _TRISCbits 0F94                    _MyusartRead 0CC6           __end_ofi1_UART_Write 0E46  
                  _CCP1CONbits 0FBD                      _TXSTAbits 0FAC                     main@normal 0022  
                   main@number 0014                 __end_of_Hi_ISR 0E66                 __end_of_Lo_ISR 006C  
 __end_of_INTERRUPT_Initialize 0E60                    _BAUDCONbits 0FB8                  __pidataCOMRAM 0E46  
               _ADC_Initialize 0E1A         ?_OSCILLATOR_Initialize 0001            start_initialization 0D68  
            ??_UART_Initialize 000D                       ??_Hi_ISR 0001                       ??_Lo_ISR 0008  
       __end_of_ADC_Initialize 0E30                    __pbssCOMRAM 002E              ??_CCP1_Initialize 000D  
                    __pintcode 0008                       ?___awmod 0001                ?_ADC_Initialize 0001  
                  __pintcodelo 0018                    __smallconst 0600              ??_UART_Write_Text 000F  
         _INTERRUPT_Initialize 0E58                       _IPR1bits 0F9F                       _PIE1bits 0F9D  
                     i1u108_20 003C                       i1u108_21 0038                       i1u109_20 004A  
                     i1u109_21 0046                       _PIR1bits 0F9E                   i1_UART_Write 0E30  
                     _RCONbits 0FD0                      main@F3085 0058                     _ADCON0bits 0FC2  
                   _ADCON2bits 0FC0                      main@i_184 001E                      main@i_178 0026  
                    main@i_179 0028                      main@i_187 0020                      main@count 002C  
                 ?_MyusartRead 0001                      copy_data0 0D7C          ?_INTERRUPT_Initialize 0001  
             i1UART_Write@data 0001                       __Hrparam 0000                       __Lrparam 0000  
                 __Lsmallconst 0600        ??_OSCILLATOR_Initialize 000D                _UART_Initialize 0DCC  
                     __ptext10 0CC6                       __ptext11 0E30                       __ptext12 0C16  
          UART_Write_Text@text 000E                       isa$xinst 0000                       int$flags 0062  
                     _mystring 0044                     _INTCONbits 0FF2                _CCP1_Initialize 0DA6  
       ??_INTERRUPT_Initialize 000D                       intlevel1 0000                       intlevel2 0000  
             ??_ADC_Initialize 000D        __end_of_UART_Initialize 0DEE                _UART_Write_Text 0D26  
                   _UART_Write 0DEE               UART_Write_Text@i 0010  
